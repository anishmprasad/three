{"ast":null,"code":"import { getOnBeforeCompile } from './../rendering/getOnBeforeCompile';\nimport { computeFontSize } from '../2DObjects/TextLiveLabel';\nimport { IconCanvas, HotspotSpriteMaterial, generateSpriteGeometry } from '../../Q3/assets/sprites/IconTexture'; //import THREE from \"three\";\n\nimport RenderManager from '../rendering/render-manager';\nimport { updateSpline } from './spline';\nimport MaterialBuilder from '../rendering/material-builder';\nimport RenderQuality from '../render-quality';\nimport Network from '../miniviews/network';\nimport { Utils } from '../utils';\nimport * as THREE from 'three';\nconsole.log(THREE);\nexport function loadAssets(backgroundLoadProgress) {\n  let texturesArray = Object.keys(window.Q3.data.assets.textures),\n      lightsArray = Object.keys(window.Q3.data.assets.lights),\n      materialsArray = Object.keys(window.Q3.data.assets.materials),\n      objectsArray = Object.keys(window.Q3.data.assets.objects);\n  window.Q3.assets = window.Q3.assets || {\n    textures: {},\n    geometries: {},\n    lights: {},\n    materials: {},\n    objects: {},\n    animations: {}\n  };\n  window.Q3.loaders = window.Q3.loaders || {};\n  window.Q3.loaders.texture = window.Q3.loaders.texture || new THREE.TextureLoader();\n  window.Q3.loaders.HDRCube = window.Q3.loaders.HDRCube || new THREE.HDRCubeTextureLoader();\n  window.Q3.loaders.draco = window.Q3.loaders.draco || new THREE.DRACOLoader();\n  window.Q3.loaders.gltf = window.Q3.loaders.gltf || new THREE.GLTFLoader();\n  window.Q3.loaders.file = window.Q3.loaders.file || new THREE.FileLoader();\n\n  function isMaterialInUse(uuid) {\n    for (let i = 0; i < objectsArray.length; i++) {\n      const objUuid = objectsArray[i];\n\n      if (window.Q3.data.assets.objects[objUuid].material === uuid) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  function isTextureInUse(uuid) {\n    if (uuid.startsWith('lensflare') || !!window.Q3.data.assets.textures[uuid].cube) {\n      return true;\n    }\n\n    for (let i = 0; i < materialsArray.length; i++) {\n      const matUuid = materialsArray[i];\n      const mData = window.Q3.data.assets.materials[matUuid];\n      const props = Object.keys(mData);\n\n      for (let j = 0; j < props.length; j++) {\n        const prop = props[j];\n\n        if (mData[prop] === uuid) {\n          return true;\n        } else if (prop === 'layers') {\n          if (mData[prop].find(x => {\n            if (x.map && x.map === uuid) return true;\n            if (x.normalMap && x.normalMap === uuid) return true;\n            return false;\n          })) return true;\n        }\n      }\n    }\n\n    for (let i = 0; i < window.Q3.data.slides.length; i++) {\n      const slide = window.Q3.data.slides[i];\n\n      if (uuid === slide.backgroundValue) {\n        return true;\n      }\n    }\n\n    return false;\n  } // cleanup unused materials\n\n\n  for (let i = 0; i < materialsArray.length; i++) {\n    const matUuid = materialsArray[i];\n\n    if (!isMaterialInUse(matUuid)) {\n      console.warn('Removing unused material: ' + window.Q3.data.assets.materials[matUuid].name);\n      delete window.Q3.data.assets.materials[matUuid];\n    }\n  }\n\n  materialsArray = Object.keys(window.Q3.data.assets.materials); // cleanup unused textures\n\n  for (let i = 0; i < texturesArray.length; i++) {\n    const tUuid = texturesArray[i];\n\n    if (!isTextureInUse(tUuid)) {\n      console.warn('Removing unused texture: ' + window.Q3.data.assets.textures[tUuid].name);\n      delete window.Q3.data.assets.textures[tUuid];\n    }\n  }\n\n  texturesArray = Object.keys(window.Q3.data.assets.textures);\n  loadGeometry().then(() => {\n    createLights();\n    createTextures();\n    createEnvironmetLight();\n    createMaterials();\n    createObjects();\n    bindSkeletons();\n    window.Q3.camera.updateCamera();\n\n    if (!window.Q3.editMode) {\n      window.Q3.splash.removeProgress();\n    }\n\n    if (window.Q3.data.setups.autoStart !== false || window.Q3.editMode) {\n      window.Q3.splash.remove();\n      window.Q3.fire('splashremoved');\n    } else {\n      $('#start-tour-btn').fadeIn().on('click', () => {\n        window.Q3.splash.remove();\n        window.Q3.fire('splashremoved');\n      });\n    } //load the res of assets in a background\n\n\n    initLoadQueue(backgroundLoadProgress);\n\n    if (Utils.queryParams.has('cameraHelpers')) {\n      window.Q3.data.slides.forEach(slide => {\n        const scene = Network.getWorld(slide.camera.gate).scene;\n\n        (() => {\n          const material = new THREE.MeshBasicMaterial({\n            color: Math.floor(0xffffff * Math.random()),\n            side: THREE.DoubleSide,\n            wireframe: true,\n            depthTest: false,\n            depthWrite: false,\n            transparent: true,\n            wireframeLinewidth: 4\n          });\n          const geometry = new THREE.SphereBufferGeometry(0.5, 32, 32);\n          const mesh = new THREE.Mesh(geometry, material);\n          mesh.position.copy(slide.camera.position);\n          scene.add(mesh); // setTimeout(function () {\n          //     mesh.parent.remove(mesh);\n          //     material.dispose();\n          //     geometry.dispose();\n          // }, 30000);\n        })();\n      });\n    }\n  });\n  var canvas = document.createElement('canvas'); // http://code.google.com/p/explorercanvas/wiki/Instructions#Dynamically_created_elements\n\n  if (!canvas.getContext) G_vmlCanvasManager.initElement(canvas);\n  var ctx = canvas.getContext('2d');\n  canvas.width = 1;\n  canvas.height = 1;\n\n  function createImage(fillStyle) {\n    ctx.fillStyle = fillStyle;\n    ctx.fillRect(0, 0, 1, 1);\n    var img = document.createElement('img');\n    let promise = new Promise((resolve, reject) => {\n      img.onload = resolve;\n    });\n    img.src = canvas.toDataURL('image/png');\n    return {\n      image: img,\n      promise: promise\n    };\n  }\n\n  var whiteImage = createImage('rgb(255,255,255)');\n\n  function isTexture(propertyName) {\n    return propertyName !== 'aoMapIntensity' && (propertyName.indexOf('map') > -1 || propertyName.indexOf('Map') > -1);\n  }\n\n  function shouldIgnoreTextureProperty(propertyName) {\n    if (propertyName.indexOf('Intensity') > -1) {\n      return true;\n    }\n    /* This change makes it look too ugly on mobile so I commented it out\n      //do not use roughnessMap in lq\n      if (window.Q3.browserCapabilities.renderQuality < RenderQuality.NORMAL &&\n          (propertyName === \"roughnessMap\" || propertyName === \"metalnessMap\")) {\n          return true;\n      }*/\n\n\n    return false;\n  }\n\n  function shouldIgnoreTexture(textureUuid) {\n    let ignore = true;\n\n    for (let i = 0; i < materialsArray.length; i++) {\n      const m = materialsArray[i];\n      const mData = window.Q3.data.assets.materials[m];\n\n      for (let k in mData) {\n        if (mData[k] === textureUuid && isTexture(k) && !shouldIgnoreTextureProperty(k)) {\n          ignore = false;\n        }\n      }\n    }\n\n    window.Q3.data.slides.forEach(s => {\n      if (s.backgroundType === 'texture' && s.backgroundValue === textureUuid) {\n        ignore = false;\n      }\n    });\n    return ignore;\n  }\n\n  function createTextures() {\n    const texturesArray = Object.keys(window.Q3.data.assets.textures);\n    texturesArray.forEach(t => {\n      const tData = window.Q3.data.assets.textures[t];\n\n      if (!!tData.cube) {\n        //cubetextures, only hdr now\n        const cube = new THREE.CubeTexture([whiteImage.image, whiteImage.image, whiteImage.image, whiteImage.image, whiteImage.image, whiteImage.image]); //assign properties like cubemapping\n\n        for (let k in tData) {\n          if (cube.hasOwnProperty(k) && k !== 'PMREM') {\n            cube[k] = tData[k];\n          }\n        }\n\n        whiteImage.promise.then(() => {\n          cube.needsUpdate = true;\n        });\n        window.Q3.assets.textures[t] = cube;\n        window.Q3.assets.textures[t].uuid = t;\n      } else if (!shouldIgnoreTexture(t)) {\n        //regular textures\n        const fillStyle = tData.dominantColor ? tData.dominantColor : 'rgb(120,120,120)';\n        var img = createImage(fillStyle);\n        const texture = new THREE.Texture(img.image);\n        img.promise.then(() => {\n          texture.needsUpdate = true;\n        });\n        window.Q3.camera.update = true; //assign properties like minfilter, etc\n\n        for (let k in window.Q3.data.assets.textures[t]) {\n          if (texture.hasOwnProperty(k)) {\n            if (k === 'repeat') {\n              Object.assign(texture.repeat, {\n                x: tData[k][0],\n                y: tData[k][1]\n              });\n              texture.anisotropy = 4;\n            } else {\n              texture[k] = window.Q3.data.assets.textures[t][k];\n            }\n          }\n        }\n\n        window.Q3.assets.textures[t] = texture;\n        window.Q3.assets.textures[t].uuid = t;\n      }\n    });\n  }\n\n  function shouldIgnoreLight(lightType) {\n    switch (lightType) {\n      case 'AmbientLight':\n      case 'Ambient':\n        return false;\n\n      case 'HemisphereLight':\n      case 'DirectionalLight':\n      case 'SpotLight':\n      case 'PointLight':\n      case 'RectAreaLight':\n        return window.Q3.browserCapabilities.renderQuality < RenderQuality.NORMAL;\n    }\n  }\n\n  function createLights() {\n    lightsArray.forEach(l => {\n      const lightData = window.Q3.data.assets.lights[l],\n            color = lightData.color.indexOf('#') > -1 ? lightData.color : parseInt(lightData.color);\n\n      if (!shouldIgnoreLight(lightData.type)) {\n        let light;\n\n        switch (lightData.type) {\n          case 'AmbientLight':\n          case 'Ambient':\n            light = new THREE.AmbientLight(color, lightData.intensity);\n            break;\n\n          case 'HemisphereLight':\n            light = new THREE.HemisphereLight(color, parseInt(lightData.groundColor), lightData.intensity);\n            break;\n\n          case 'DirectionalLight':\n            light = new THREE.DirectionalLight(color, lightData.intensity);\n            break;\n\n          case 'SpotLight':\n            light = new THREE.SpotLight(color, lightData.intensity, lightData.distance, lightData.angle, lightData.penumbra, lightData.decay);\n            break;\n\n          case 'PointLight':\n            light = new THREE.PointLight(color, lightData.intensity, lightData.distance, lightData.decay);\n            break;\n\n          case 'RectAreaLight':\n            light = new THREE.ReactAreaLight(color, lightData.intensity, lightData.width, lightData.height);\n            break;\n        } // if ( lightData.type === 'AmbientLight' )          light = new THREE.AmbientLight( color, lightData.intensity );\n        // else if ( lightData.type === 'HemisphereLight' )  light = new THREE.HemisphereLight( color, parseInt( lightData.groundColor ), lightData.intensity );\n        // else if ( lightData.type === 'DirectionalLight' ) light = new THREE.DirectionalLight( color, lightData.intensity );\n        // else if ( lightData.type === 'SpotLight' )        light = new THREE.SpotLight( color, lightData.intensity, lightData.distance, lightData.angle, lightData.penumbra, lightData.decay );\n        // else if ( lightData.type === 'PointLight' )       light = new THREE.PointLight( color, lightData.intensity, lightData.distance, lightData.decay );\n        // else if ( lightData.type === 'RectAreaLight' )    light = new THREE.ReactAreaLight( color, lightData.intensity, lightData.width, lightData.height );\n\n\n        if (!!light.shadow && lightData.type !== 'RectAreaLight' && lightData.type !== 'PointLight') {\n          //reactarealight shadows are not working in threejs yet. | PointLight shadows are too expensive so we decided to disable them\n          light.castShadow = !!lightData.castShadow;\n          light.shadow.mapSize.set(1, 1).multiplyScalar(lightData.shadowResolution || 512);\n          Object.assign(light.shadow.camera, {\n            near: lightData.shadowNearPersp || 0.01,\n            far: lightData.shadowFar || 1000\n          });\n\n          if (lightData.type === 'DirectionalLight') {\n            Object.assign(light.shadow.camera, {\n              near: lightData.shadowNearOrtho || 0.01,\n              left: -lightData.shadowWidth / 2 || -5,\n              right: lightData.shadowWidth / 2 || 5,\n              bottom: -lightData.shadowHeight / 2 || -5,\n              top: lightData.shadowHeight / 2 || 5\n            });\n          }\n\n          light.shadow.camera.updateProjectionMatrix();\n          light.shadow.bias = lightData.shadowBias || 0;\n          light.castShadow = !!lightData.castShadow;\n        } //Lights without shadows are lights that don't need positionning,\n        //though they have pos/rot/scale properties (ambient, hemi).\n\n\n        if (!!light.shadow) light.position.copy(lightData.position);\n\n        if (lightData.lensflares) {\n          const lensflares = lensEffect();\n          light.add(lensflares);\n          light.userData.lensflares = lensflares;\n          lensflares.lensFlares.forEach(flare => {\n            flare.scale = lightData.lensflaresScale || 1;\n          });\n        }\n\n        light.uuid = l;\n        light.name = lightData.name;\n        window.Q3.assets.lights[l] = light;\n      }\n    });\n  }\n\n  function createMaterials() {\n    const createIconHotspotMaterial = function (m, mData) {\n      //Empty texture, will be replaced\n      let texture = new THREE.Texture();\n      texture.iconData = mData.iconData;\n      texture.lastUpdate = new Date(); //Material\n\n      let hotspotMaterial = new HotspotSpriteMaterial(texture, new THREE.Vector2(mData.iconData.scaleX, mData.iconData.scaleY));\n      let material = hotspotMaterial.material;\n      material.uuid = m;\n      material.needsUpdate = true;\n      let newMap = new IconCanvas(mData.iconData);\n      newMap.draw().then(image => {\n        let newTexture = new THREE.Texture(image);\n        newTexture.needsUpdate = true;\n        newTexture.iconData = mData.iconData;\n        newTexture.lastUpdate = new Date();\n\n        material._iconConstructor.setTexture(newTexture);\n\n        material.needsUpdate = true;\n      });\n      return material;\n    };\n\n    materialsArray.forEach(m => {\n      const mData = window.Q3.data.assets.materials[m];\n      let material;\n\n      if (mData.type && mData.type !== 7) {\n        let params = {\n          morphTargets: true\n        };\n\n        switch (mData.type) {\n          case 0:\n            material = new THREE.MeshBasicMaterial(params);\n            break;\n\n          case 1:\n            material = new THREE.MeshLambertMaterial(params);\n            break;\n\n          case 2:\n            material = new THREE.MeshPhongMaterial(params);\n            break;\n\n          case 3:\n            material = MaterialBuilder.build({\n              materialType: mData.materialType,\n              doNotSetValues: true\n            });\n            break;\n\n          case 4:\n            material = new THREE.PointsMaterial(params);\n            break;\n\n          case 5:\n            material = new THREE.LineBasicMaterial(params);\n            break;\n\n          case 6:\n            material = new THREE.SpriteMaterial();\n            break;\n        }\n\n        material.uuid = m;\n        material.onBeforeCompile = getOnBeforeCompile(material);\n\n        if (mData['smoothClipEnd'] !== undefined && mData['smoothClipStart'] && mData['smoothClipEnabled'] === undefined) {\n          mData.smoothClipEnabled = true;\n        }\n\n        for (let k in mData) {\n          if (k === 'layers' && mData.materialType === 'nested') {\n            material.setLayers(mData[k].map(x => {\n              return {\n                distance: new THREE.Vector2().fromArray(x.distance),\n                map: x.map ? window.Q3.assets.textures[x.map] : null,\n                normalMap: x.normalMap ? window.Q3.assets.textures[x.normalMap] : null\n              };\n            }));\n          } else if (k === 'smoothClipEnd' || k === 'smoothClipStart') {\n            material.uniforms[k].value = mData[k];\n          } else if (k === 'smoothClipEnabled') {\n            material.setSmoothClipEnabled(mData[k]);\n          } else if (material[k] !== undefined && k !== 'type') {\n            if (isTexture(k)) {\n              const t = window.Q3.assets.textures[mData[k]];\n              material[k] = t;\n            } else if (['color', 'emissive', 'specular'].indexOf(k) > -1) {\n              //if color\n              material[k] = new THREE.Color(parseInt(mData[k]));\n            } else if (['start', 'end'].indexOf(k) === -1) {\n              //if other\n              if (k === 'normalScale') {\n                //it seems that earlier normalscale was {x, y} instead of just a number, this fixes it.\n                if (typeof mData[k] !== 'number' && mData[k].x) material[k].set(mData[k].x, mData[k].x);else material[k].set(mData[k], mData[k]);\n              } else {\n                material[k] = mData[k];\n              }\n            }\n          }\n        }\n\n        if (material.transparent) material.alphaTest = 0.01;\n        material.envMap = window.Q3.assets.envLight.cubeMap;\n        material.needsUpdate = true;\n        window.Q3.assets.materials[m] = material;\n      } else if (mData.type === 7) {\n        material = createIconHotspotMaterial(m, mData); //Assets\n\n        window.Q3.assets.materials[m] = material;\n        window.Q3.assets.materials[m].uuid = m;\n        window.Q3.assets.materials[m] = material;\n      } else {\n        let params = Object.assign({}, mData.script, {\n          morphTargets: true\n        });\n        material = new THREE.ShaderMaterial(params);\n        material.needsUpdate = true;\n        window.Q3.assets.materials[m] = material;\n        window.Q3.assets.materials[m].uuid = m;\n      }\n    });\n  }\n\n  function bindSkeletons() {\n    const objects = objectsArray.map(o => {\n      const oData = window.Q3.data.assets.objects[o];\n      let object;\n\n      switch (oData.type) {\n        case 'SkinnedMesh':\n          object = window.Q3.assets.objects[o];\n\n          if (object && window.Q3.data.assets.skeletons[o]) {\n            const skeletonData = window.Q3.data.assets.skeletons[o];\n            const bindMatrices = [];\n\n            for (let i = 0, len = skeletonData.inverses.length / 16; i < len; i++) bindMatrices.push(new THREE.Matrix4().fromArray(skeletonData.inverses, i * 16));\n\n            const skeleton = new THREE.Skeleton(skeletonData.bones.map(id => window.Q3.assets.objects[id]), bindMatrices);\n            object.material.skinning = true;\n            object.material.needsUpdate = true;\n            object.bind(skeleton, new THREE.Matrix4().fromArray(skeletonData.bind));\n          }\n\n          break;\n      }\n    });\n  }\n\n  function createObjects() {\n    const objects = objectsArray.map(o => {\n      const oData = window.Q3.data.assets.objects[o];\n      let object;\n\n      switch (oData.type) {\n        case 'Object3D':\n          object = new THREE.Object3D();\n          break;\n\n        case 'Gate':\n          object = Network.createGate({\n            worldUuid: oData.world_id,\n            parentUuid: oData.parent_world\n          });\n          break;\n\n        case 'Mesh':\n        case 'SkinnedMesh':\n          object = new (oData.type === 'Mesh' ? THREE.Mesh : THREE.SkinnedMesh)(window.Q3.assets.geometries[oData.geometry], window.Q3.assets.materials[oData.material]);\n          if (oData.type === 'SkinnedMesh') object.frustumCulled = false;\n          RenderManager.raycaster.makeTrackable(object);\n          object.castShadow = object.receiveShadow = true;\n\n          if (oData.subType) {\n            object.subType = oData.subType;\n          }\n\n          break;\n\n        case 'Sprite':\n          object = new THREE.Sprite(window.Q3.assets.materials[oData.material]);\n          RenderManager.raycaster.makeTrackable(object);\n          break;\n\n        case 'Bone':\n          object = new THREE.Bone();\n          break;\n\n        case 'Group':\n        default:\n          object = new THREE.Group();\n          break;\n      }\n\n      for (let k in oData) {\n        if (['material', 'geometry', 'type', 'parent'].indexOf(k) === -1) {\n          if (['position', 'rotation', 'scale'].indexOf(k) > -1) {\n            Object.assign(object[k], oData[k]);\n          } else {\n            object.hasOwnProperty(k) ? object[k] = oData[k] : object.userData[k] = oData[k];\n          }\n        }\n      }\n\n      window.Q3.assets.objects[o] = object;\n      window.Q3.assets.objects[o].uuid = o;\n      window.Q3.assets.objects[o].visible = window.Q3.data.slides[0].animation[o].visible !== false;\n      return object;\n    });\n    objects.forEach(object => {\n      //color change on slide 0 on load\n      const anim = window.Q3.data.slides[0].animation[object.uuid];\n      if (anim && anim.color) object.material.color.setHex(anim.color);\n      if (anim && anim.opacity >= 0) object.material.opacity = anim.opacity;\n      const asset = window.Q3.data.assets.objects[object.uuid]; // if (!asset.parent_world) asset.parent_world = window.Q3.gateNetwork.currentWorldUuid;\n      //parenting\n\n      const parentUuid = asset.parent;\n      let scene = window.Q3.scene;\n\n      if (!parentUuid && asset.parent_world) {\n        const parentWorld = Network.getWorld(asset.parent_world);\n        if (parentWorld) scene = parentWorld.gate.scene;\n      }\n\n      (parentUuid ? window.Q3.assets.objects[parentUuid] : scene).add(object); //clipping planes setup\n\n      const clipId = asset.clipMaterial;\n\n      if (clipId) {\n        const normalMat = new THREE.Matrix4();\n        object.userData.plane = new THREE.Plane();\n\n        object.onBeforeRender = () => {\n          const normal = new THREE.Vector3(object.geometry.attributes.normal.array[0], object.geometry.attributes.normal.array[1], object.geometry.attributes.normal.array[2]);\n          const point = new THREE.Vector3(object.geometry.attributes.position.array[0], object.geometry.attributes.position.array[1], object.geometry.attributes.position.array[2]);\n          normalMat.identity().extractRotation(object.matrixWorld);\n          normal.applyMatrix4(normalMat);\n          point.applyMatrix4(object.matrixWorld);\n          object.userData.plane.setFromNormalAndCoplanarPoint(normal, point);\n        };\n\n        window.Q3.assets.materials[clipId].clippingPlanes = window.Q3.assets.materials[clipId].clippingPlanes || [];\n        window.Q3.assets.materials[clipId].clippingPlanes.push(object.userData.plane);\n        window.Q3.assets.materials[clipId].clipShadows = true;\n        window.Q3.assets.materials[clipId].needsUpdate = true;\n      }\n\n      if (asset.subType === 'Spline') {\n        object.subType = 'Spline';\n        updateSpline(object.uuid);\n      }\n    });\n    /*\n      objects.forEach(object => {\n        //start loop animation is any attached\n        let animation = window.Q3.data.assets.objects[object.uuid].animation;\n        if (animation) {\n          if (typeof (animation) === \"string\") {\n            window.Q3.data.assets.objects[object.uuid].animation = animation = {\n              uuid: animation,\n              type: THREE.LoopRepeat,\n              timescale: 1\n            }\n          }\n           const clip = window.Q3.assets.animations[animation.uuid];\n          if (clip) {\n            const action = window.Q3.mixer.clipAction(clip, object);\n            action.setLoop(animation.type || THREE.LoopRepeat);\n            action.setEffectiveTimeScale(animation.timescale || 1);\n            action.play();\n          }\n        }\n      });*/\n\n    Object.keys(window.Q3.assets.lights).forEach(lightUuid => {\n      //parenting\n      const parentUuid = window.Q3.data.assets.lights[lightUuid].parent;\n      (parentUuid ? window.Q3.assets.objects[parentUuid] : window.Q3.scene).add(window.Q3.assets.lights[lightUuid]);\n\n      if (window.Q3.data.slides[0].animation[lightUuid]) {\n        window.Q3.assets.lights[lightUuid].visible = !(window.Q3.data.slides[0].animation[lightUuid].visible === false);\n      }\n\n      if (window.Q3.data.assets.lights[lightUuid].targetUuid) window.Q3.assets.lights[lightUuid].target = window.Q3.assets.objects[window.Q3.data.assets.lights[lightUuid].targetUuid];\n    });\n    window.Q3.camera.needsUpdate = true;\n    RenderManager.shadowMap.needsUpdate = true;\n    const slide = window.Q3.data.slides[window.Q3.slide];\n    window.Q3.background.setBackground(slide.backgroundType, slide.backgroundValue, slide.backgroundOffsetX, slide.backgroundOffsetY, slide.backgroundScaleX, slide.backgroundScaleY, 0);\n\n    if (!window.Q3.editMode) {\n      window.Q3.container.parentElement.style.backgroundColor = slide.backgroundValue;\n    } //window.Q3.splash.remove();\n    //loadTextures();\n\n  }\n\n  function createEnvironmetLight() {\n    var whiteImage = createImage('rgba(30,30,30,255)');\n    const cube = new THREE.CubeTexture([whiteImage.image, whiteImage.image, whiteImage.image, whiteImage.image, whiteImage.image, whiteImage.image]);\n    cube.encoding = THREE.RGBM16Encoding;\n    whiteImage.promise.then(() => {\n      cube.needsUpdate = true;\n    });\n    cube.generateMipmaps = false;\n    cube.version = 1;\n    window.Q3.assets.envLight = {\n      cubeMap: cube\n    };\n  }\n\n  function lensEffect(source, camera) {\n    var flareColor = new THREE.Color(0xffffff);\n    flareColor.setHSL(0.9, 0.9, 1);\n\n    const lensFlareUpdateCallback = object => {\n      var f,\n          fl = object.lensFlares.length;\n      var flare;\n      var vecX = -object.positionScreen.x * 2;\n      var vecY = -object.positionScreen.y * 2;\n\n      for (f = 0; f < fl; f++) {\n        flare = object.lensFlares[f];\n        flare.x = object.positionScreen.x + vecX * flare.distance;\n        flare.y = object.positionScreen.y + vecY * flare.distance;\n        flare.rotation = 0;\n      }\n\n      object.lensFlares[2].y += 0.025;\n      object.lensFlares[3].rotation = object.positionScreen.x * 0.5 + THREE.Math.degToRad(45);\n    };\n\n    const lensFlare = new THREE.LensFlare(window.Q3.assets.textures.lensflare1, 1000, 0.0, THREE.AdditiveBlending, flareColor);\n    lensFlare.add(window.Q3.assets.textures.lensflare2, 2000, 0.0, THREE.AdditiveBlending);\n    lensFlare.add(window.Q3.assets.textures.lensflare3, 100, 0.2, THREE.AdditiveBlending);\n    lensFlare.add(window.Q3.assets.textures.lensflare3, 300, 0.3, THREE.AdditiveBlending);\n    lensFlare.add(window.Q3.assets.textures.lensflare3, 70, 0.5, THREE.AdditiveBlending);\n    lensFlare.add(window.Q3.assets.textures.lensflare3, 180, 0.9, THREE.AdditiveBlending);\n    lensFlare.add(window.Q3.assets.textures.lensflare3, 70, 1.0, THREE.AdditiveBlending);\n    lensFlare.customUpdateCallback = lensFlareUpdateCallback;\n    return lensFlare;\n  }\n}\nlet assetsRequestsCount = 0;\nlet counter = 0;\n\nfunction updateProgressBar() {\n  window.Q3.splash.update(counter++ / assetsRequestsCount);\n}\n\nfunction loadGeometry() {\n  const geometriesArray = Object.keys(window.Q3.data.assets.geometries);\n  const promises = [];\n  geometriesArray.forEach(g => {\n    const gData = window.Q3.data.assets.geometries[g];\n    let geo = null;\n    debugger;\n\n    switch (gData.type) {\n      case 'Sphere':\n        const sphereGeo = geo = new THREE.SphereBufferGeometry(gData.radius, gData.widthSegments, gData.heightSegments);\n        sphereGeo.addAttribute('worldObjectId', new THREE.BufferAttribute(new Float32Array([]), 1));\n        sphereGeo.uuid = g;\n        sphereGeo.name = gData.name;\n        window.Q3.assets.geometries[g] = sphereGeo;\n        break;\n\n      case 'Cube':\n        const cubeGeo = geo = new THREE.BoxBufferGeometry(gData.width, gData.height, gData.depth);\n        cubeGeo.addAttribute('worldObjectId', new THREE.BufferAttribute(new Float32Array([]), 1));\n        cubeGeo.uuid = g;\n        cubeGeo.name = gData.name;\n        window.Q3.assets.geometries[g] = cubeGeo;\n        break;\n\n      case 'Arrow':\n        const arrowGeo = geo = new THREE.ArrowBufferGeometry(gData.width, gData.height, gData.depth, gData.arrowWidth, gData.arrowHeight);\n        arrowGeo.addAttribute('worldObjectId', new THREE.BufferAttribute(new Float32Array([]), 1));\n        arrowGeo.uuid = g;\n        arrowGeo.name = gData.name;\n        window.Q3.assets.geometries[g] = arrowGeo;\n        break;\n\n      case 'Plane':\n        const planeGeo = geo = new THREE.PlaneBufferGeometry(gData.width, gData.height, gData.widthSegments, gData.heightSegments);\n        planeGeo.uuid = g;\n        planeGeo.name = gData.name;\n        planeGeo.addAttribute('worldObjectId', new THREE.BufferAttribute(new Float32Array([]), 1));\n        window.Q3.assets.geometries[g] = planeGeo;\n        break;\n\n      case 'Ring':\n        const ringGeo = geo = new THREE.CustomRingBufferGeometry(gData.innerRadius, gData.outerRadius, gData.thetaSegments);\n        ringGeo.addAttribute('worldObjectId', new THREE.BufferAttribute(new Float32Array([]), 1));\n        ringGeo.uuid = g;\n        ringGeo.name = gData.name;\n        window.Q3.assets.geometries[g] = ringGeo;\n        break;\n\n      case 'IconHotspot':\n        const spriteGeo = geo = generateSpriteGeometry();\n        spriteGeo.uuid = g;\n        spriteGeo.name = gData.name;\n        window.Q3.assets.geometries[g] = spriteGeo;\n        break;\n\n      default:\n        assetsRequestsCount++;\n        promises.push(new Promise((resolve, reject) => {\n          function loadDraco(path) {\n            window.Q3.loaders.draco.load(path, geometry => {\n              geo = geometry;\n              updateProgressBar();\n              geometry.addAttribute('worldObjectId', new THREE.BufferAttribute(new Float32Array([]), 1));\n              window.Q3.assets.geometries[g] = geometry;\n              window.Q3.assets.geometries[g].uuid = g;\n              window.Q3.assets.geometries[g].name = gData.name;\n              resolve();\n            }, undefined, reason => {\n              updateProgressBar();\n              window.Q3.assets.geometries[g] = undefined; // window.Q3.assets.geometries[g].uuid = g;\n              // window.Q3.assets.geometries[g].name = gData.name;\n\n              resolve();\n            });\n          }\n\n          function loadGeometryFromGLTF(path) {\n            loadGLTF(path, nodes => {\n              let geometry = null;\n              let node = nodes.scene.getObjectByName(g);\n\n              if (!!node) {\n                geometry = node.geometry;\n              } else {\n                geometry = nodes.scene.children[0].geometry;\n              }\n\n              geo = geometry;\n              updateProgressBar();\n              geometry.addAttribute('worldObjectId', new THREE.BufferAttribute(new Float32Array([]), 1));\n              window.Q3.assets.geometries[g] = geometry;\n              window.Q3.assets.geometries[g].uuid = g;\n              window.Q3.assets.geometries[g].name = gData.name;\n              resolve();\n            }, reason => {\n              updateProgressBar();\n              window.Q3.assets.geometries[g] = undefined; // window.Q3.assets.geometries[g].uuid = g;\n              // window.Q3.assets.geometries[g].name = gData.name;\n\n              resolve();\n            });\n          }\n\n          gData.path.match(/.glb$|.gltf$/) ? loadGeometryFromGLTF(gData.path) : loadDraco(gData.path);\n        }));\n        break;\n    }\n  });\n  return Promise.all(promises);\n}\n\nfunction loadAnimations() {\n  const loadQueue = [];\n  const animations = Object.keys(window.Q3.data.assets.animations || {});\n  animations.forEach(animUuid => {\n    loadQueue.push({\n      priority: 2,\n      load: () => {\n        return new Promise(resolve => {\n          const animData = window.Q3.data.assets.animations[animUuid];\n          window.Q3.loaders.file.load(animData.path, animJson => {\n            window.Q3.assets.animations = window.Q3.assets.animations || {};\n            const clip = window.Q3.assets.animations[animUuid] = THREE.AnimationClip.parse(JSON.parse(animJson));\n            const objectsUuids = Object.keys(window.Q3.data.assets.objects);\n            objectsUuids.forEach(objectUuid => {\n              //start loop animation is any attached\n              let animation = window.Q3.data.assets.objects[objectUuid].animation;\n\n              if (typeof animation === 'string') {\n                window.Q3.data.assets.objects[objectUuid].animation = animation = {\n                  uuid: animation,\n                  type: THREE.LoopRepeat,\n                  timescale: 1\n                };\n              }\n\n              if (animation && animation.uuid === animUuid) {\n                const object = window.Q3.assets.objects[objectUuid];\n\n                if (clip) {\n                  const action = window.Q3.mixer.clipAction(clip, object);\n                  action.setLoop(animation.type || THREE.LoopRepeat);\n                  action.setEffectiveTimeScale(animation.timescale || 1);\n                  action.play();\n                }\n              }\n            });\n\n            if (Object.keys(window.Q3.assets.animations).length === animations.length) {\n              window.Q3.fire('assetsLoaded');\n              console.log('assets loaded fired');\n            }\n\n            resolve();\n          }, undefined, resolve);\n        });\n      }\n    });\n  });\n  return loadQueue;\n}\n\nfunction getTextureUrl(id, size) {\n  const tData = window.Q3.data.assets.textures[id];\n  const ext = tData.path.slice(tData.path.lastIndexOf('.') + 1);\n  let url = '/texture?id=' + id + '&ext=' + ext + '&size=' + size + '&webp=' + window.Q3.browserCapabilities.supports.WebP;\n\n  if (window.COOBO) {\n    url = '/api' + url;\n  }\n\n  return url;\n}\n\nfunction loadTextures() {\n  const texturesArray = Object.keys(window.Q3.data.assets.textures);\n  window.Q3.loaders.texture = window.Q3.loaders.texture || new THREE.TextureLoader();\n  const texturesLoadQueue = [];\n  const materials = Object.keys(window.Q3.data.assets.materials).map(x => window.Q3.data.assets.materials[x]);\n  const pbrTextures = materials.map(x => x.metalnessMap).concat(materials.map(x => x.normalMap)).concat(materials.map(x => x.roughnessMap)).filter((item, pos, self) => self.indexOf(item) == pos);\n  const backgroundTextures = window.Q3.data.slides.map(slide => slide.backgroundValue);\n  texturesArray.forEach(t => {\n    const tData = window.Q3.data.assets.textures[t];\n\n    if (!tData.cube && window.Q3.assets.textures[t]) {\n      //if texture placeholder was not created it means that we want to skip this texture (lq mode for instance)\n      let size = window.Q3.data.assets.textures[t].size || 0; //assume size 2^12 = 4k if not present\n\n      if (window.Q3.browserCapabilities.renderQuality === RenderQuality.NORMAL) {\n        if (backgroundTextures.indexOf(t) === -1) {\n          size--;\n        }\n      } else if (window.Q3.browserCapabilities.renderQuality === RenderQuality.LOW) {\n        if (pbrTextures.indexOf(t) !== -1) {\n          size -= 2;\n        } else {\n          size--;\n        }\n      }\n\n      if (size <= 0 || size > 7) {\n        const lodSize = 7; // texture size 2^7 = 128 as first LOD\n\n        const lodPath = getTextureUrl(t, lodSize); // texture size 2^7 = 128 as first LOD\n\n        texturesLoadQueue.push({\n          priority: 0,\n          load: loadTexture.bind(null, t, lodPath)\n        });\n      }\n\n      const path = getTextureUrl(t, size);\n      texturesLoadQueue.push({\n        priority: 10,\n        load: loadTexture.bind(null, t, path)\n      });\n    }\n  });\n  return texturesLoadQueue;\n}\n\nconst textureRegex = /(?:[\\da-z_-]+)\\.(?:[a-z]+)$/i;\n\nfunction loadTexture(uuid, path) {\n  return new Promise(resolve => {\n    if (!path) {\n      resolve();\n      return;\n    }\n\n    const match = path.match(textureRegex);\n    path = match ? `/assets/${match[0]}${window.Q3.browserCapabilities.supports.WebP ? '.webp' : ''}` : path;\n    window.Q3.loaders.texture.load(path, texture => {\n      const tData = window.Q3.data.assets.textures[uuid];\n\n      for (let k in tData) {\n        if (texture.hasOwnProperty(k)) {\n          if (k === 'repeat') {\n            Object.assign(texture.repeat, {\n              x: tData[k][0],\n              y: tData[k][1]\n            });\n          } else {\n            texture[k] = tData[k];\n          }\n        }\n      }\n\n      texture.uuid = uuid;\n\n      if (!!window.Q3.assets.textures[uuid]) {\n        window.Q3.assets.textures[uuid].dispose();\n      }\n\n      window.Q3.assets.textures[uuid] = texture;\n\n      if (!tData.dominantColor) {\n        RGBaster.colors(texture.image, {\n          success: function (payload) {\n            tData.dominantColor = payload.dominant;\n          }\n        });\n      }\n\n      updateObjects();\n      window.Q3.background.updateTextures();\n      resolve();\n    }, undefined, resolve);\n  });\n}\n\nfunction loadLiveLabels() {\n  let labelsLoaded = 0;\n  const loadQueue = [];\n  const liveLabels = Object.keys(window.Q3.data.liveLabels || {});\n\n  if (!liveLabels.length) {\n    window.Q3.fire('labelsLoaded');\n    window.Q3.labelsLoaded = true;\n  }\n\n  function deserializeLabels(data) {\n    if (!data) return;\n    const {\n      data: label_data,\n      object\n    } = data;\n    if (object.uuid !== label_data.object_uuid) return;\n    const label = label_data.label;\n    window.Q3.labels.live.deserialize(label_data.version, object, label); //document.dispatchEvent(new Event(\"loadedassets\"));\n\n    labelsLoaded++;\n\n    if (labelsLoaded === liveLabels.length) {\n      window.Q3.labelsLoaded = true;\n      window.Q3.fire('labelsLoaded');\n    }\n  }\n\n  computeFontSize();\n\n  if (!window.Q3.editMode && getParams(window.location.href).preview === 'true') {\n    window.Q3.data.liveLabels.forEach(l => {\n      const root = window.Q3.scene;\n      const object = root.getObjectByProperty('uuid', l.object_uuid);\n      deserializeLabels({\n        object: object,\n        data: l\n      });\n    });\n    window.Q3.fire('labelsLoaded');\n  } else {\n    liveLabels.forEach(object_uuid => {\n      loadQueue.push({\n        priority: 3,\n        load: () => {\n          return new Promise(resolve => {\n            const root = window.Q3.scene;\n            const object = root.getObjectByProperty('uuid', object_uuid);\n\n            if (object) {\n              const label_uuid = window.Q3.data.liveLabels[object_uuid]; // var url = \"/getLiveLabels/\" + label_uuid;\n\n              var url = `${window.location.origin}/assets/live-labels/${label_uuid}.json`; // This shouldn't be put here and is a placeholder to get the work done since I'm not familiar enough with the file flow.\n\n              if (!window.COOBO) {\n                url = '/assets/live-labels/' + label_uuid + '.json';\n              }\n\n              $.getJSON(url).then(data => {\n                deserializeLabels({\n                  object: object,\n                  data: data\n                });\n                resolve(null);\n              }).catch(() => resolve(null));\n            } else resolve(null);\n          });\n        }\n      });\n    });\n  }\n\n  return loadQueue;\n}\n\nfunction loadEnvironmentLight() {\n  function createImg(base64) {\n    var image = new Image();\n    let promise = new Promise((resolve, reject) => {\n      image.onload = resolve;\n    });\n    image.src = base64;\n    return {\n      image: image,\n      promise: promise\n    };\n  }\n\n  const sides = ['px', 'nx', 'py', 'ny', 'pz', 'nz'];\n  var url = window.Q3.data.slides[0].envLight || '/assets-qbix/F16EFB92-4B2C-46EB-8F86-8AC2322E4FAE.env'; //for old tours that do not hav it yet\n\n  return {\n    priority: 4,\n    load: () => {\n      return new Promise((resolve, reject) => {\n        window.Q3.loadEnvLight(url).then(cubeData => {\n          const envMap = window.Q3.assets.envLight.cubeMap;\n          const loadPromises = [];\n\n          for (let i = 0; i < cubeData.length; i++) {\n            const mipmap = cubeData[i];\n            envMap.mipmaps[i] = [];\n\n            for (let side of sides) {\n              let image = createImg(mipmap[side]);\n              envMap.mipmaps[i].push(image.image);\n              loadPromises.push(image.promise);\n            }\n          }\n\n          Promise.all(loadPromises).then(() => {\n            envMap.needsUpdate = true;\n          });\n          envMap.maxMipLevel = 5;\n          resolve(null);\n        });\n      });\n    }\n  };\n}\n\nfunction updateObjects() {\n  Object.keys(window.Q3.data.assets.materials).forEach(matUuid => {\n    const matData = window.Q3.data.assets.materials[matUuid];\n\n    if (matUuid) {\n      const material = window.Q3.assets.materials[matUuid];\n      Object.keys(matData).forEach(mapType => {\n        if ((mapType.indexOf('map') > -1 || mapType.indexOf('Map') > -1) && matData[mapType] && mapType.indexOf('Intensity') === -1) {\n          const texture = window.Q3.assets.textures[matData[mapType]];\n\n          if (!texture) {\n            console.warn('Material ' + matData.name + ' uses texture which is not present in textures collection');\n            return;\n          }\n\n          if (mapType.indexOf('2') > -1) {\n            //custom map uniforms for LOD\n            material[mapType].value = window.Q3.assets.textures[matData[mapType]];\n            material[mapType].value.needsUpdate = true;\n          } else if (mapType === 'envMap') {\n            material[mapType] = window.Q3.assets.envLight.cubeMap;\n          } else {\n            material[mapType] = window.Q3.assets.textures[matData[mapType]];\n            material[mapType].needsUpdate = true;\n          }\n        }\n      });\n\n      if (material.isMeshNestedMaterial) {\n        material.layers.forEach(layer => {\n          if (layer.map) layer.map = window.Q3.assets.textures[layer.map.uuid];\n          if (layer.normalMap) layer.normalMap = window.Q3.assets.textures[layer.normalMap.uuid];\n        });\n        material.resendTexturesToGPU();\n      }\n\n      material.needsUpdate = true;\n      window.Q3.camera.update = true;\n    }\n  });\n}\n\nfunction initLoadQueue(backgroundLoadProgress) {\n  var textures = loadTextures();\n  var liveLabels = loadLiveLabels();\n  var animations = loadAnimations();\n  var envLight = loadEnvironmentLight();\n  var all = [...textures, ...liveLabels, ...animations, envLight];\n  var loaded = 0;\n  all.sort((a, b) => a.priority - b.priority).map(p => p.load).reduce((p, f) => p.then(() => {\n    loaded++;\n\n    if (!!backgroundLoadProgress) {\n      backgroundLoadProgress(loaded / all.length);\n    }\n\n    return f();\n  }), Promise.resolve());\n} // multiple geometries can be hold in a single gltf and each of them will try to load it\n// this function will prevent from loading the same file multiple times\n\n\nconst gltfPromises = {};\n\nfunction loadGLTF(path, onLoad, onError) {\n  var promise = gltfPromises[path];\n\n  if (!promise) {\n    promise = new Promise(function (resolve, reject) {\n      window.Q3.loaders.gltf.load(path, x => resolve(x), undefined, reject);\n    });\n    gltfPromises[path] = promise;\n  }\n\n  promise.then(onLoad, onError);\n} // WEBPACK FOOTER //\n// ./src/Q3/assets/loadAssets.js","map":{"version":3,"sources":["/Users/ghost/Documents/three/src/source/assets/loadAssets.js"],"names":["getOnBeforeCompile","computeFontSize","IconCanvas","HotspotSpriteMaterial","generateSpriteGeometry","RenderManager","updateSpline","MaterialBuilder","RenderQuality","Network","Utils","THREE","console","log","loadAssets","backgroundLoadProgress","texturesArray","Object","keys","window","Q3","data","assets","textures","lightsArray","lights","materialsArray","materials","objectsArray","objects","geometries","animations","loaders","texture","TextureLoader","HDRCube","HDRCubeTextureLoader","draco","DRACOLoader","gltf","GLTFLoader","file","FileLoader","isMaterialInUse","uuid","i","length","objUuid","material","isTextureInUse","startsWith","cube","matUuid","mData","props","j","prop","find","x","map","normalMap","slides","slide","backgroundValue","warn","name","tUuid","loadGeometry","then","createLights","createTextures","createEnvironmetLight","createMaterials","createObjects","bindSkeletons","camera","updateCamera","editMode","splash","removeProgress","setups","autoStart","remove","fire","$","fadeIn","on","initLoadQueue","queryParams","has","forEach","scene","getWorld","gate","MeshBasicMaterial","color","Math","floor","random","side","DoubleSide","wireframe","depthTest","depthWrite","transparent","wireframeLinewidth","geometry","SphereBufferGeometry","mesh","Mesh","position","copy","add","canvas","document","createElement","getContext","G_vmlCanvasManager","initElement","ctx","width","height","createImage","fillStyle","fillRect","img","promise","Promise","resolve","reject","onload","src","toDataURL","image","whiteImage","isTexture","propertyName","indexOf","shouldIgnoreTextureProperty","shouldIgnoreTexture","textureUuid","ignore","m","k","s","backgroundType","t","tData","CubeTexture","hasOwnProperty","needsUpdate","dominantColor","Texture","update","assign","repeat","y","anisotropy","shouldIgnoreLight","lightType","browserCapabilities","renderQuality","NORMAL","l","lightData","parseInt","type","light","AmbientLight","intensity","HemisphereLight","groundColor","DirectionalLight","SpotLight","distance","angle","penumbra","decay","PointLight","ReactAreaLight","shadow","castShadow","mapSize","set","multiplyScalar","shadowResolution","near","shadowNearPersp","far","shadowFar","shadowNearOrtho","left","shadowWidth","right","bottom","shadowHeight","top","updateProjectionMatrix","bias","shadowBias","lensflares","lensEffect","userData","lensFlares","flare","scale","lensflaresScale","createIconHotspotMaterial","iconData","lastUpdate","Date","hotspotMaterial","Vector2","scaleX","scaleY","newMap","draw","newTexture","_iconConstructor","setTexture","params","morphTargets","MeshLambertMaterial","MeshPhongMaterial","build","materialType","doNotSetValues","PointsMaterial","LineBasicMaterial","SpriteMaterial","onBeforeCompile","undefined","smoothClipEnabled","setLayers","fromArray","uniforms","value","setSmoothClipEnabled","Color","alphaTest","envMap","envLight","cubeMap","script","ShaderMaterial","o","oData","object","skeletons","skeletonData","bindMatrices","len","inverses","push","Matrix4","skeleton","Skeleton","bones","id","skinning","bind","Object3D","createGate","worldUuid","world_id","parentUuid","parent_world","SkinnedMesh","frustumCulled","raycaster","makeTrackable","receiveShadow","subType","Sprite","Bone","Group","visible","animation","anim","setHex","opacity","asset","parent","parentWorld","clipId","clipMaterial","normalMat","plane","Plane","onBeforeRender","normal","Vector3","attributes","array","point","identity","extractRotation","matrixWorld","applyMatrix4","setFromNormalAndCoplanarPoint","clippingPlanes","clipShadows","lightUuid","targetUuid","target","shadowMap","background","setBackground","backgroundOffsetX","backgroundOffsetY","backgroundScaleX","backgroundScaleY","container","parentElement","style","backgroundColor","encoding","RGBM16Encoding","generateMipmaps","version","source","flareColor","setHSL","lensFlareUpdateCallback","f","fl","vecX","positionScreen","vecY","rotation","degToRad","lensFlare","LensFlare","lensflare1","AdditiveBlending","lensflare2","lensflare3","customUpdateCallback","assetsRequestsCount","counter","updateProgressBar","geometriesArray","promises","g","gData","geo","sphereGeo","radius","widthSegments","heightSegments","addAttribute","BufferAttribute","Float32Array","cubeGeo","BoxBufferGeometry","depth","arrowGeo","ArrowBufferGeometry","arrowWidth","arrowHeight","planeGeo","PlaneBufferGeometry","ringGeo","CustomRingBufferGeometry","innerRadius","outerRadius","thetaSegments","spriteGeo","loadDraco","path","load","reason","loadGeometryFromGLTF","loadGLTF","nodes","node","getObjectByName","children","match","all","loadAnimations","loadQueue","animUuid","priority","animData","animJson","clip","AnimationClip","parse","JSON","objectsUuids","objectUuid","LoopRepeat","timescale","action","mixer","clipAction","setLoop","setEffectiveTimeScale","play","getTextureUrl","size","ext","slice","lastIndexOf","url","supports","WebP","COOBO","loadTextures","texturesLoadQueue","pbrTextures","metalnessMap","concat","roughnessMap","filter","item","pos","self","backgroundTextures","LOW","lodSize","lodPath","loadTexture","textureRegex","dispose","RGBaster","colors","success","payload","dominant","updateObjects","updateTextures","loadLiveLabels","labelsLoaded","liveLabels","deserializeLabels","label_data","object_uuid","label","labels","live","deserialize","getParams","location","href","preview","root","getObjectByProperty","label_uuid","origin","getJSON","catch","loadEnvironmentLight","createImg","base64","Image","sides","loadEnvLight","cubeData","loadPromises","mipmap","mipmaps","maxMipLevel","matData","mapType","isMeshNestedMaterial","layers","layer","resendTexturesToGPU","loaded","sort","a","b","p","reduce","gltfPromises","onLoad","onError"],"mappings":"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","sourcesContent":["import { getOnBeforeCompile } from './../rendering/getOnBeforeCompile';\n\nimport { computeFontSize } from '../2DObjects/TextLiveLabel';\n\nimport { IconCanvas, HotspotSpriteMaterial, generateSpriteGeometry } from '../../Q3/assets/sprites/IconTexture';\n\n//import THREE from \"three\";\nimport RenderManager from '../rendering/render-manager';\nimport { updateSpline } from './spline';\n\nimport MaterialBuilder from '../rendering/material-builder';\nimport RenderQuality from '../render-quality';\nimport Network from '../miniviews/network';\nimport { Utils } from '../utils';\n\nimport * as THREE from 'three';\n\nconsole.log(THREE);\n\nexport function loadAssets(backgroundLoadProgress) {\n\tlet texturesArray = Object.keys(window.Q3.data.assets.textures),\n\t\tlightsArray = Object.keys(window.Q3.data.assets.lights),\n\t\tmaterialsArray = Object.keys(window.Q3.data.assets.materials),\n\t\tobjectsArray = Object.keys(window.Q3.data.assets.objects);\n\n\twindow.Q3.assets = window.Q3.assets || {\n\t\ttextures: {},\n\t\tgeometries: {},\n\t\tlights: {},\n\t\tmaterials: {},\n\t\tobjects: {},\n\t\tanimations: {}\n\t};\n\n\twindow.Q3.loaders = window.Q3.loaders || {};\n\twindow.Q3.loaders.texture = window.Q3.loaders.texture || new THREE.TextureLoader();\n\twindow.Q3.loaders.HDRCube = window.Q3.loaders.HDRCube || new THREE.HDRCubeTextureLoader();\n\twindow.Q3.loaders.draco = window.Q3.loaders.draco || new THREE.DRACOLoader();\n\twindow.Q3.loaders.gltf = window.Q3.loaders.gltf || new THREE.GLTFLoader();\n\twindow.Q3.loaders.file = window.Q3.loaders.file || new THREE.FileLoader();\n\n\tfunction isMaterialInUse(uuid) {\n\t\tfor (let i = 0; i < objectsArray.length; i++) {\n\t\t\tconst objUuid = objectsArray[i];\n\t\t\tif (window.Q3.data.assets.objects[objUuid].material === uuid) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tfunction isTextureInUse(uuid) {\n\t\tif (uuid.startsWith('lensflare') || !!window.Q3.data.assets.textures[uuid].cube) {\n\t\t\treturn true;\n\t\t}\n\t\tfor (let i = 0; i < materialsArray.length; i++) {\n\t\t\tconst matUuid = materialsArray[i];\n\t\t\tconst mData = window.Q3.data.assets.materials[matUuid];\n\t\t\tconst props = Object.keys(mData);\n\n\t\t\tfor (let j = 0; j < props.length; j++) {\n\t\t\t\tconst prop = props[j];\n\t\t\t\tif (mData[prop] === uuid) {\n\t\t\t\t\treturn true;\n\t\t\t\t} else if (prop === 'layers') {\n\t\t\t\t\tif (\n\t\t\t\t\t\tmData[prop].find(x => {\n\t\t\t\t\t\t\tif (x.map && x.map === uuid) return true;\n\t\t\t\t\t\t\tif (x.normalMap && x.normalMap === uuid) return true;\n\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor (let i = 0; i < window.Q3.data.slides.length; i++) {\n\t\t\tconst slide = window.Q3.data.slides[i];\n\t\t\tif (uuid === slide.backgroundValue) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t// cleanup unused materials\n\tfor (let i = 0; i < materialsArray.length; i++) {\n\t\tconst matUuid = materialsArray[i];\n\t\tif (!isMaterialInUse(matUuid)) {\n\t\t\tconsole.warn('Removing unused material: ' + window.Q3.data.assets.materials[matUuid].name);\n\t\t\tdelete window.Q3.data.assets.materials[matUuid];\n\t\t}\n\t}\n\tmaterialsArray = Object.keys(window.Q3.data.assets.materials);\n\n\t// cleanup unused textures\n\tfor (let i = 0; i < texturesArray.length; i++) {\n\t\tconst tUuid = texturesArray[i];\n\t\tif (!isTextureInUse(tUuid)) {\n\t\t\tconsole.warn('Removing unused texture: ' + window.Q3.data.assets.textures[tUuid].name);\n\t\t\tdelete window.Q3.data.assets.textures[tUuid];\n\t\t}\n\t}\n\ttexturesArray = Object.keys(window.Q3.data.assets.textures);\n\n\tloadGeometry().then(() => {\n\t\tcreateLights();\n\t\tcreateTextures();\n\t\tcreateEnvironmetLight();\n\t\tcreateMaterials();\n\t\tcreateObjects();\n\t\tbindSkeletons();\n\n\t\twindow.Q3.camera.updateCamera();\n\t\tif (!window.Q3.editMode) {\n\t\t\twindow.Q3.splash.removeProgress();\n\t\t}\n\t\tif (window.Q3.data.setups.autoStart !== false || window.Q3.editMode) {\n\t\t\twindow.Q3.splash.remove();\n\t\t\twindow.Q3.fire('splashremoved');\n\t\t} else {\n\t\t\t$('#start-tour-btn')\n\t\t\t\t.fadeIn()\n\t\t\t\t.on('click', () => {\n\t\t\t\t\twindow.Q3.splash.remove();\n\t\t\t\t\twindow.Q3.fire('splashremoved');\n\t\t\t\t});\n\t\t}\n\n\t\t//load the res of assets in a background\n\t\tinitLoadQueue(backgroundLoadProgress);\n\n\t\tif (Utils.queryParams.has('cameraHelpers')) {\n\t\t\twindow.Q3.data.slides.forEach(slide => {\n\t\t\t\tconst scene = Network.getWorld(slide.camera.gate).scene;\n\t\t\t\t(() => {\n\t\t\t\t\tconst material = new THREE.MeshBasicMaterial({\n\t\t\t\t\t\tcolor: Math.floor(0xffffff * Math.random()),\n\t\t\t\t\t\tside: THREE.DoubleSide,\n\t\t\t\t\t\twireframe: true,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\ttransparent: true,\n\t\t\t\t\t\twireframeLinewidth: 4\n\t\t\t\t\t});\n\t\t\t\t\tconst geometry = new THREE.SphereBufferGeometry(0.5, 32, 32);\n\t\t\t\t\tconst mesh = new THREE.Mesh(geometry, material);\n\n\t\t\t\t\tmesh.position.copy(slide.camera.position);\n\n\t\t\t\t\tscene.add(mesh);\n\t\t\t\t\t// setTimeout(function () {\n\t\t\t\t\t//     mesh.parent.remove(mesh);\n\t\t\t\t\t//     material.dispose();\n\t\t\t\t\t//     geometry.dispose();\n\t\t\t\t\t// }, 30000);\n\t\t\t\t})();\n\t\t\t});\n\t\t}\n\t});\n\n\tvar canvas = document.createElement('canvas');\n\n\t// http://code.google.com/p/explorercanvas/wiki/Instructions#Dynamically_created_elements\n\tif (!canvas.getContext) G_vmlCanvasManager.initElement(canvas);\n\n\tvar ctx = canvas.getContext('2d');\n\tcanvas.width = 1;\n\tcanvas.height = 1;\n\n\tfunction createImage(fillStyle) {\n\t\tctx.fillStyle = fillStyle;\n\t\tctx.fillRect(0, 0, 1, 1);\n\t\tvar img = document.createElement('img');\n\t\tlet promise = new Promise((resolve, reject) => {\n\t\t\timg.onload = resolve;\n\t\t});\n\t\timg.src = canvas.toDataURL('image/png');\n\t\treturn { image: img, promise: promise };\n\t}\n\n\tvar whiteImage = createImage('rgb(255,255,255)');\n\n\tfunction isTexture(propertyName) {\n\t\treturn (\n\t\t\tpropertyName !== 'aoMapIntensity' && (propertyName.indexOf('map') > -1 || propertyName.indexOf('Map') > -1)\n\t\t);\n\t}\n\n\tfunction shouldIgnoreTextureProperty(propertyName) {\n\t\tif (propertyName.indexOf('Intensity') > -1) {\n\t\t\treturn true;\n\t\t}\n\n\t\t/* This change makes it look too ugly on mobile so I commented it out\n    //do not use roughnessMap in lq\n    if (window.Q3.browserCapabilities.renderQuality < RenderQuality.NORMAL &&\n        (propertyName === \"roughnessMap\" || propertyName === \"metalnessMap\")) {\n        return true;\n    }*/\n\n\t\treturn false;\n\t}\n\n\tfunction shouldIgnoreTexture(textureUuid) {\n\t\tlet ignore = true;\n\t\tfor (let i = 0; i < materialsArray.length; i++) {\n\t\t\tconst m = materialsArray[i];\n\t\t\tconst mData = window.Q3.data.assets.materials[m];\n\t\t\tfor (let k in mData) {\n\t\t\t\tif (mData[k] === textureUuid && isTexture(k) && !shouldIgnoreTextureProperty(k)) {\n\t\t\t\t\tignore = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\twindow.Q3.data.slides.forEach(s => {\n\t\t\tif (s.backgroundType === 'texture' && s.backgroundValue === textureUuid) {\n\t\t\t\tignore = false;\n\t\t\t}\n\t\t});\n\n\t\treturn ignore;\n\t}\n\n\tfunction createTextures() {\n\t\tconst texturesArray = Object.keys(window.Q3.data.assets.textures);\n\t\ttexturesArray.forEach(t => {\n\t\t\tconst tData = window.Q3.data.assets.textures[t];\n\n\t\t\tif (!!tData.cube) {\n\t\t\t\t//cubetextures, only hdr now\n\t\t\t\tconst cube = new THREE.CubeTexture([\n\t\t\t\t\twhiteImage.image,\n\t\t\t\t\twhiteImage.image,\n\t\t\t\t\twhiteImage.image,\n\t\t\t\t\twhiteImage.image,\n\t\t\t\t\twhiteImage.image,\n\t\t\t\t\twhiteImage.image\n\t\t\t\t]);\n\t\t\t\t//assign properties like cubemapping\n\t\t\t\tfor (let k in tData) {\n\t\t\t\t\tif (cube.hasOwnProperty(k) && k !== 'PMREM') {\n\t\t\t\t\t\tcube[k] = tData[k];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\twhiteImage.promise.then(() => {\n\t\t\t\t\tcube.needsUpdate = true;\n\t\t\t\t});\n\t\t\t\twindow.Q3.assets.textures[t] = cube;\n\t\t\t\twindow.Q3.assets.textures[t].uuid = t;\n\t\t\t} else if (!shouldIgnoreTexture(t)) {\n\t\t\t\t//regular textures\n\t\t\t\tconst fillStyle = tData.dominantColor ? tData.dominantColor : 'rgb(120,120,120)';\n\t\t\t\tvar img = createImage(fillStyle);\n\t\t\t\tconst texture = new THREE.Texture(img.image);\n\t\t\t\timg.promise.then(() => {\n\t\t\t\t\ttexture.needsUpdate = true;\n\t\t\t\t});\n\t\t\t\twindow.Q3.camera.update = true;\n\t\t\t\t//assign properties like minfilter, etc\n\t\t\t\tfor (let k in window.Q3.data.assets.textures[t]) {\n\t\t\t\t\tif (texture.hasOwnProperty(k)) {\n\t\t\t\t\t\tif (k === 'repeat') {\n\t\t\t\t\t\t\tObject.assign(texture.repeat, { x: tData[k][0], y: tData[k][1] });\n\t\t\t\t\t\t\ttexture.anisotropy = 4;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttexture[k] = window.Q3.data.assets.textures[t][k];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\twindow.Q3.assets.textures[t] = texture;\n\t\t\t\twindow.Q3.assets.textures[t].uuid = t;\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction shouldIgnoreLight(lightType) {\n\t\tswitch (lightType) {\n\t\t\tcase 'AmbientLight':\n\t\t\tcase 'Ambient':\n\t\t\t\treturn false;\n\t\t\tcase 'HemisphereLight':\n\t\t\tcase 'DirectionalLight':\n\t\t\tcase 'SpotLight':\n\t\t\tcase 'PointLight':\n\t\t\tcase 'RectAreaLight':\n\t\t\t\treturn window.Q3.browserCapabilities.renderQuality < RenderQuality.NORMAL;\n\t\t}\n\t}\n\n\tfunction createLights() {\n\t\tlightsArray.forEach(l => {\n\t\t\tconst lightData = window.Q3.data.assets.lights[l],\n\t\t\t\tcolor = lightData.color.indexOf('#') > -1 ? lightData.color : parseInt(lightData.color);\n\t\t\tif (!shouldIgnoreLight(lightData.type)) {\n\t\t\t\tlet light;\n\n\t\t\t\tswitch (lightData.type) {\n\t\t\t\t\tcase 'AmbientLight':\n\t\t\t\t\tcase 'Ambient':\n\t\t\t\t\t\tlight = new THREE.AmbientLight(color, lightData.intensity);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\t\tlight = new THREE.HemisphereLight(color, parseInt(lightData.groundColor), lightData.intensity);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\t\tlight = new THREE.DirectionalLight(color, lightData.intensity);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'SpotLight':\n\t\t\t\t\t\tlight = new THREE.SpotLight(\n\t\t\t\t\t\t\tcolor,\n\t\t\t\t\t\t\tlightData.intensity,\n\t\t\t\t\t\t\tlightData.distance,\n\t\t\t\t\t\t\tlightData.angle,\n\t\t\t\t\t\t\tlightData.penumbra,\n\t\t\t\t\t\t\tlightData.decay\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'PointLight':\n\t\t\t\t\t\tlight = new THREE.PointLight(color, lightData.intensity, lightData.distance, lightData.decay);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\t\tlight = new THREE.ReactAreaLight(color, lightData.intensity, lightData.width, lightData.height);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// if ( lightData.type === 'AmbientLight' )          light = new THREE.AmbientLight( color, lightData.intensity );\n\t\t\t\t// else if ( lightData.type === 'HemisphereLight' )  light = new THREE.HemisphereLight( color, parseInt( lightData.groundColor ), lightData.intensity );\n\t\t\t\t// else if ( lightData.type === 'DirectionalLight' ) light = new THREE.DirectionalLight( color, lightData.intensity );\n\t\t\t\t// else if ( lightData.type === 'SpotLight' )        light = new THREE.SpotLight( color, lightData.intensity, lightData.distance, lightData.angle, lightData.penumbra, lightData.decay );\n\t\t\t\t// else if ( lightData.type === 'PointLight' )       light = new THREE.PointLight( color, lightData.intensity, lightData.distance, lightData.decay );\n\t\t\t\t// else if ( lightData.type === 'RectAreaLight' )    light = new THREE.ReactAreaLight( color, lightData.intensity, lightData.width, lightData.height );\n\n\t\t\t\tif (!!light.shadow && lightData.type !== 'RectAreaLight' && lightData.type !== 'PointLight') {\n\t\t\t\t\t//reactarealight shadows are not working in threejs yet. | PointLight shadows are too expensive so we decided to disable them\n\n\t\t\t\t\tlight.castShadow = !!lightData.castShadow;\n\n\t\t\t\t\tlight.shadow.mapSize.set(1, 1).multiplyScalar(lightData.shadowResolution || 512);\n\t\t\t\t\tObject.assign(light.shadow.camera, {\n\t\t\t\t\t\tnear: lightData.shadowNearPersp || 0.01,\n\t\t\t\t\t\tfar: lightData.shadowFar || 1000\n\t\t\t\t\t});\n\t\t\t\t\tif (lightData.type === 'DirectionalLight') {\n\t\t\t\t\t\tObject.assign(light.shadow.camera, {\n\t\t\t\t\t\t\tnear: lightData.shadowNearOrtho || 0.01,\n\t\t\t\t\t\t\tleft: -lightData.shadowWidth / 2 || -5,\n\t\t\t\t\t\t\tright: lightData.shadowWidth / 2 || 5,\n\t\t\t\t\t\t\tbottom: -lightData.shadowHeight / 2 || -5,\n\t\t\t\t\t\t\ttop: lightData.shadowHeight / 2 || 5\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tlight.shadow.camera.updateProjectionMatrix();\n\t\t\t\t\tlight.shadow.bias = lightData.shadowBias || 0;\n\t\t\t\t\tlight.castShadow = !!lightData.castShadow;\n\t\t\t\t}\n\n\t\t\t\t//Lights without shadows are lights that don't need positionning,\n\t\t\t\t//though they have pos/rot/scale properties (ambient, hemi).\n\t\t\t\tif (!!light.shadow) light.position.copy(lightData.position);\n\n\t\t\t\tif (lightData.lensflares) {\n\t\t\t\t\tconst lensflares = lensEffect();\n\t\t\t\t\tlight.add(lensflares);\n\t\t\t\t\tlight.userData.lensflares = lensflares;\n\t\t\t\t\tlensflares.lensFlares.forEach(flare => {\n\t\t\t\t\t\tflare.scale = lightData.lensflaresScale || 1;\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tlight.uuid = l;\n\t\t\t\tlight.name = lightData.name;\n\n\t\t\t\twindow.Q3.assets.lights[l] = light;\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction createMaterials() {\n\t\tconst createIconHotspotMaterial = function(m, mData) {\n\t\t\t//Empty texture, will be replaced\n\t\t\tlet texture = new THREE.Texture();\n\t\t\ttexture.iconData = mData.iconData;\n\t\t\ttexture.lastUpdate = new Date();\n\n\t\t\t//Material\n\t\t\tlet hotspotMaterial = new HotspotSpriteMaterial(\n\t\t\t\ttexture,\n\t\t\t\tnew THREE.Vector2(mData.iconData.scaleX, mData.iconData.scaleY)\n\t\t\t);\n\n\t\t\tlet material = hotspotMaterial.material;\n\t\t\tmaterial.uuid = m;\n\t\t\tmaterial.needsUpdate = true;\n\n\t\t\tlet newMap = new IconCanvas(mData.iconData);\n\n\t\t\tnewMap.draw().then(image => {\n\t\t\t\tlet newTexture = new THREE.Texture(image);\n\t\t\t\tnewTexture.needsUpdate = true;\n\t\t\t\tnewTexture.iconData = mData.iconData;\n\t\t\t\tnewTexture.lastUpdate = new Date();\n\n\t\t\t\tmaterial._iconConstructor.setTexture(newTexture);\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t});\n\n\t\t\treturn material;\n\t\t};\n\n\t\tmaterialsArray.forEach(m => {\n\t\t\tconst mData = window.Q3.data.assets.materials[m];\n\n\t\t\tlet material;\n\n\t\t\tif (mData.type && mData.type !== 7) {\n\t\t\t\tlet params = { morphTargets: true };\n\n\t\t\t\tswitch (mData.type) {\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tmaterial = new THREE.MeshBasicMaterial(params);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tmaterial = new THREE.MeshLambertMaterial(params);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tmaterial = new THREE.MeshPhongMaterial(params);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tmaterial = MaterialBuilder.build({ materialType: mData.materialType, doNotSetValues: true });\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 4:\n\t\t\t\t\t\tmaterial = new THREE.PointsMaterial(params);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 5:\n\t\t\t\t\t\tmaterial = new THREE.LineBasicMaterial(params);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 6:\n\t\t\t\t\t\tmaterial = new THREE.SpriteMaterial();\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tmaterial.uuid = m;\n\t\t\t\tmaterial.onBeforeCompile = getOnBeforeCompile(material);\n\n\t\t\t\tif (\n\t\t\t\t\tmData['smoothClipEnd'] !== undefined &&\n\t\t\t\t\tmData['smoothClipStart'] &&\n\t\t\t\t\tmData['smoothClipEnabled'] === undefined\n\t\t\t\t) {\n\t\t\t\t\tmData.smoothClipEnabled = true;\n\t\t\t\t}\n\n\t\t\t\tfor (let k in mData) {\n\t\t\t\t\tif (k === 'layers' && mData.materialType === 'nested') {\n\t\t\t\t\t\tmaterial.setLayers(\n\t\t\t\t\t\t\tmData[k].map(x => {\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\tdistance: new THREE.Vector2().fromArray(x.distance),\n\t\t\t\t\t\t\t\t\tmap: x.map ? window.Q3.assets.textures[x.map] : null,\n\t\t\t\t\t\t\t\t\tnormalMap: x.normalMap ? window.Q3.assets.textures[x.normalMap] : null\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t);\n\t\t\t\t\t} else if (k === 'smoothClipEnd' || k === 'smoothClipStart') {\n\t\t\t\t\t\tmaterial.uniforms[k].value = mData[k];\n\t\t\t\t\t} else if (k === 'smoothClipEnabled') {\n\t\t\t\t\t\tmaterial.setSmoothClipEnabled(mData[k]);\n\t\t\t\t\t} else if (material[k] !== undefined && k !== 'type') {\n\t\t\t\t\t\tif (isTexture(k)) {\n\t\t\t\t\t\t\tconst t = window.Q3.assets.textures[mData[k]];\n\t\t\t\t\t\t\tmaterial[k] = t;\n\t\t\t\t\t\t} else if (['color', 'emissive', 'specular'].indexOf(k) > -1) {\n\t\t\t\t\t\t\t//if color\n\n\t\t\t\t\t\t\tmaterial[k] = new THREE.Color(parseInt(mData[k]));\n\t\t\t\t\t\t} else if (['start', 'end'].indexOf(k) === -1) {\n\t\t\t\t\t\t\t//if other\n\n\t\t\t\t\t\t\tif (k === 'normalScale') {\n\t\t\t\t\t\t\t\t//it seems that earlier normalscale was {x, y} instead of just a number, this fixes it.\n\t\t\t\t\t\t\t\tif (typeof mData[k] !== 'number' && mData[k].x) material[k].set(mData[k].x, mData[k].x);\n\t\t\t\t\t\t\t\telse material[k].set(mData[k], mData[k]);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tmaterial[k] = mData[k];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (material.transparent) material.alphaTest = 0.01;\n\t\t\t\tmaterial.envMap = window.Q3.assets.envLight.cubeMap;\n\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\twindow.Q3.assets.materials[m] = material;\n\t\t\t} else if (mData.type === 7) {\n\t\t\t\tmaterial = createIconHotspotMaterial(m, mData);\n\n\t\t\t\t//Assets\n\t\t\t\twindow.Q3.assets.materials[m] = material;\n\t\t\t\twindow.Q3.assets.materials[m].uuid = m;\n\t\t\t\twindow.Q3.assets.materials[m] = material;\n\t\t\t} else {\n\t\t\t\tlet params = Object.assign({}, mData.script, { morphTargets: true });\n\t\t\t\tmaterial = new THREE.ShaderMaterial(params);\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\twindow.Q3.assets.materials[m] = material;\n\t\t\t\twindow.Q3.assets.materials[m].uuid = m;\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction bindSkeletons() {\n\t\tconst objects = objectsArray.map(o => {\n\t\t\tconst oData = window.Q3.data.assets.objects[o];\n\n\t\t\tlet object;\n\n\t\t\tswitch (oData.type) {\n\t\t\t\tcase 'SkinnedMesh':\n\t\t\t\t\tobject = window.Q3.assets.objects[o];\n\n\t\t\t\t\tif (object && window.Q3.data.assets.skeletons[o]) {\n\t\t\t\t\t\tconst skeletonData = window.Q3.data.assets.skeletons[o];\n\n\t\t\t\t\t\tconst bindMatrices = [];\n\t\t\t\t\t\tfor (let i = 0, len = skeletonData.inverses.length / 16; i < len; i++)\n\t\t\t\t\t\t\tbindMatrices.push(new THREE.Matrix4().fromArray(skeletonData.inverses, i * 16));\n\n\t\t\t\t\t\tconst skeleton = new THREE.Skeleton(\n\t\t\t\t\t\t\tskeletonData.bones.map(id => window.Q3.assets.objects[id]),\n\t\t\t\t\t\t\tbindMatrices\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tobject.material.skinning = true;\n\t\t\t\t\t\tobject.material.needsUpdate = true;\n\n\t\t\t\t\t\tobject.bind(skeleton, new THREE.Matrix4().fromArray(skeletonData.bind));\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction createObjects() {\n\t\tconst objects = objectsArray.map(o => {\n\t\t\tconst oData = window.Q3.data.assets.objects[o];\n\n\t\t\tlet object;\n\n\t\t\tswitch (oData.type) {\n\t\t\t\tcase 'Object3D':\n\t\t\t\t\tobject = new THREE.Object3D();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'Gate':\n\t\t\t\t\tobject = Network.createGate({ worldUuid: oData.world_id, parentUuid: oData.parent_world });\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'Mesh':\n\t\t\t\tcase 'SkinnedMesh':\n\t\t\t\t\tobject = new (oData.type === 'Mesh' ? THREE.Mesh : THREE.SkinnedMesh)(\n\t\t\t\t\t\twindow.Q3.assets.geometries[oData.geometry],\n\t\t\t\t\t\twindow.Q3.assets.materials[oData.material]\n\t\t\t\t\t);\n\n\t\t\t\t\tif (oData.type === 'SkinnedMesh') object.frustumCulled = false;\n\n\t\t\t\t\tRenderManager.raycaster.makeTrackable(object);\n\n\t\t\t\t\tobject.castShadow = object.receiveShadow = true;\n\n\t\t\t\t\tif (oData.subType) {\n\t\t\t\t\t\tobject.subType = oData.subType;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Sprite':\n\t\t\t\t\tobject = new THREE.Sprite(window.Q3.assets.materials[oData.material]);\n\n\t\t\t\t\tRenderManager.raycaster.makeTrackable(object);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'Bone':\n\t\t\t\t\tobject = new THREE.Bone();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'Group':\n\t\t\t\tdefault:\n\t\t\t\t\tobject = new THREE.Group();\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tfor (let k in oData) {\n\t\t\t\tif (['material', 'geometry', 'type', 'parent'].indexOf(k) === -1) {\n\t\t\t\t\tif (['position', 'rotation', 'scale'].indexOf(k) > -1) {\n\t\t\t\t\t\tObject.assign(object[k], oData[k]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tobject.hasOwnProperty(k) ? (object[k] = oData[k]) : (object.userData[k] = oData[k]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\twindow.Q3.assets.objects[o] = object;\n\t\t\twindow.Q3.assets.objects[o].uuid = o;\n\t\t\twindow.Q3.assets.objects[o].visible = window.Q3.data.slides[0].animation[o].visible !== false;\n\n\t\t\treturn object;\n\t\t});\n\n\t\tobjects.forEach(object => {\n\t\t\t//color change on slide 0 on load\n\t\t\tconst anim = window.Q3.data.slides[0].animation[object.uuid];\n\t\t\tif (anim && anim.color) object.material.color.setHex(anim.color);\n\t\t\tif (anim && anim.opacity >= 0) object.material.opacity = anim.opacity;\n\n\t\t\tconst asset = window.Q3.data.assets.objects[object.uuid];\n\n\t\t\t// if (!asset.parent_world) asset.parent_world = window.Q3.gateNetwork.currentWorldUuid;\n\n\t\t\t//parenting\n\t\t\tconst parentUuid = asset.parent;\n\t\t\tlet scene = window.Q3.scene;\n\n\t\t\tif (!parentUuid && asset.parent_world) {\n\t\t\t\tconst parentWorld = Network.getWorld(asset.parent_world);\n\t\t\t\tif (parentWorld) scene = parentWorld.gate.scene;\n\t\t\t}\n\n\t\t\t(parentUuid ? window.Q3.assets.objects[parentUuid] : scene).add(object);\n\n\t\t\t//clipping planes setup\n\t\t\tconst clipId = asset.clipMaterial;\n\t\t\tif (clipId) {\n\t\t\t\tconst normalMat = new THREE.Matrix4();\n\t\t\t\tobject.userData.plane = new THREE.Plane();\n\t\t\t\tobject.onBeforeRender = () => {\n\t\t\t\t\tconst normal = new THREE.Vector3(\n\t\t\t\t\t\tobject.geometry.attributes.normal.array[0],\n\t\t\t\t\t\tobject.geometry.attributes.normal.array[1],\n\t\t\t\t\t\tobject.geometry.attributes.normal.array[2]\n\t\t\t\t\t);\n\t\t\t\t\tconst point = new THREE.Vector3(\n\t\t\t\t\t\tobject.geometry.attributes.position.array[0],\n\t\t\t\t\t\tobject.geometry.attributes.position.array[1],\n\t\t\t\t\t\tobject.geometry.attributes.position.array[2]\n\t\t\t\t\t);\n\t\t\t\t\tnormalMat.identity().extractRotation(object.matrixWorld);\n\t\t\t\t\tnormal.applyMatrix4(normalMat);\n\t\t\t\t\tpoint.applyMatrix4(object.matrixWorld);\n\t\t\t\t\tobject.userData.plane.setFromNormalAndCoplanarPoint(normal, point);\n\t\t\t\t};\n\n\t\t\t\twindow.Q3.assets.materials[clipId].clippingPlanes =\n\t\t\t\t\twindow.Q3.assets.materials[clipId].clippingPlanes || [];\n\t\t\t\twindow.Q3.assets.materials[clipId].clippingPlanes.push(object.userData.plane);\n\t\t\t\twindow.Q3.assets.materials[clipId].clipShadows = true;\n\t\t\t\twindow.Q3.assets.materials[clipId].needsUpdate = true;\n\t\t\t}\n\n\t\t\tif (asset.subType === 'Spline') {\n\t\t\t\tobject.subType = 'Spline';\n\t\t\t\tupdateSpline(object.uuid);\n\t\t\t}\n\t\t});\n\t\t/*\n    objects.forEach(object => {\n      //start loop animation is any attached\n      let animation = window.Q3.data.assets.objects[object.uuid].animation;\n      if (animation) {\n        if (typeof (animation) === \"string\") {\n          window.Q3.data.assets.objects[object.uuid].animation = animation = {\n            uuid: animation,\n            type: THREE.LoopRepeat,\n            timescale: 1\n          }\n        }\n\n        const clip = window.Q3.assets.animations[animation.uuid];\n        if (clip) {\n          const action = window.Q3.mixer.clipAction(clip, object);\n          action.setLoop(animation.type || THREE.LoopRepeat);\n          action.setEffectiveTimeScale(animation.timescale || 1);\n          action.play();\n        }\n      }\n    });*/\n\n\t\tObject.keys(window.Q3.assets.lights).forEach(lightUuid => {\n\t\t\t//parenting\n\t\t\tconst parentUuid = window.Q3.data.assets.lights[lightUuid].parent;\n\t\t\t(parentUuid ? window.Q3.assets.objects[parentUuid] : window.Q3.scene).add(\n\t\t\t\twindow.Q3.assets.lights[lightUuid]\n\t\t\t);\n\n\t\t\tif (window.Q3.data.slides[0].animation[lightUuid]) {\n\t\t\t\twindow.Q3.assets.lights[lightUuid].visible = !(\n\t\t\t\t\twindow.Q3.data.slides[0].animation[lightUuid].visible === false\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (window.Q3.data.assets.lights[lightUuid].targetUuid)\n\t\t\t\twindow.Q3.assets.lights[lightUuid].target =\n\t\t\t\t\twindow.Q3.assets.objects[window.Q3.data.assets.lights[lightUuid].targetUuid];\n\t\t});\n\n\t\twindow.Q3.camera.needsUpdate = true;\n\t\tRenderManager.shadowMap.needsUpdate = true;\n\n\t\tconst slide = window.Q3.data.slides[window.Q3.slide];\n\t\twindow.Q3.background.setBackground(\n\t\t\tslide.backgroundType,\n\t\t\tslide.backgroundValue,\n\t\t\tslide.backgroundOffsetX,\n\t\t\tslide.backgroundOffsetY,\n\t\t\tslide.backgroundScaleX,\n\t\t\tslide.backgroundScaleY,\n\t\t\t0\n\t\t);\n\t\tif (!window.Q3.editMode) {\n\t\t\twindow.Q3.container.parentElement.style.backgroundColor = slide.backgroundValue;\n\t\t}\n\n\t\t//window.Q3.splash.remove();\n\n\t\t//loadTextures();\n\t}\n\n\tfunction createEnvironmetLight() {\n\t\tvar whiteImage = createImage('rgba(30,30,30,255)');\n\n\t\tconst cube = new THREE.CubeTexture([\n\t\t\twhiteImage.image,\n\t\t\twhiteImage.image,\n\t\t\twhiteImage.image,\n\t\t\twhiteImage.image,\n\t\t\twhiteImage.image,\n\t\t\twhiteImage.image\n\t\t]);\n\t\tcube.encoding = THREE.RGBM16Encoding;\n\t\twhiteImage.promise.then(() => {\n\t\t\tcube.needsUpdate = true;\n\t\t});\n\t\tcube.generateMipmaps = false;\n\t\tcube.version = 1;\n\t\twindow.Q3.assets.envLight = { cubeMap: cube };\n\t}\n\n\tfunction lensEffect(source, camera) {\n\t\tvar flareColor = new THREE.Color(0xffffff);\n\t\tflareColor.setHSL(0.9, 0.9, 1);\n\n\t\tconst lensFlareUpdateCallback = object => {\n\t\t\tvar f,\n\t\t\t\tfl = object.lensFlares.length;\n\t\t\tvar flare;\n\t\t\tvar vecX = -object.positionScreen.x * 2;\n\t\t\tvar vecY = -object.positionScreen.y * 2;\n\n\t\t\tfor (f = 0; f < fl; f++) {\n\t\t\t\tflare = object.lensFlares[f];\n\t\t\t\tflare.x = object.positionScreen.x + vecX * flare.distance;\n\t\t\t\tflare.y = object.positionScreen.y + vecY * flare.distance;\n\t\t\t\tflare.rotation = 0;\n\t\t\t}\n\n\t\t\tobject.lensFlares[2].y += 0.025;\n\t\t\tobject.lensFlares[3].rotation = object.positionScreen.x * 0.5 + THREE.Math.degToRad(45);\n\t\t};\n\n\t\tconst lensFlare = new THREE.LensFlare(\n\t\t\twindow.Q3.assets.textures.lensflare1,\n\t\t\t1000,\n\t\t\t0.0,\n\t\t\tTHREE.AdditiveBlending,\n\t\t\tflareColor\n\t\t);\n\n\t\tlensFlare.add(window.Q3.assets.textures.lensflare2, 2000, 0.0, THREE.AdditiveBlending);\n\t\tlensFlare.add(window.Q3.assets.textures.lensflare3, 100, 0.2, THREE.AdditiveBlending);\n\t\tlensFlare.add(window.Q3.assets.textures.lensflare3, 300, 0.3, THREE.AdditiveBlending);\n\t\tlensFlare.add(window.Q3.assets.textures.lensflare3, 70, 0.5, THREE.AdditiveBlending);\n\t\tlensFlare.add(window.Q3.assets.textures.lensflare3, 180, 0.9, THREE.AdditiveBlending);\n\t\tlensFlare.add(window.Q3.assets.textures.lensflare3, 70, 1.0, THREE.AdditiveBlending);\n\n\t\tlensFlare.customUpdateCallback = lensFlareUpdateCallback;\n\n\t\treturn lensFlare;\n\t}\n}\n\nlet assetsRequestsCount = 0;\nlet counter = 0;\n\nfunction updateProgressBar() {\n\twindow.Q3.splash.update(counter++ / assetsRequestsCount);\n}\n\nfunction loadGeometry() {\n\tconst geometriesArray = Object.keys(window.Q3.data.assets.geometries);\n\tconst promises = [];\n\tgeometriesArray.forEach(g => {\n\t\tconst gData = window.Q3.data.assets.geometries[g];\n\n\t\tlet geo = null;\n\t\tdebugger;\n\t\tswitch (gData.type) {\n\t\t\tcase 'Sphere':\n\t\t\t\tconst sphereGeo = (geo = new THREE.SphereBufferGeometry(\n\t\t\t\t\tgData.radius,\n\t\t\t\t\tgData.widthSegments,\n\t\t\t\t\tgData.heightSegments\n\t\t\t\t));\n\n\t\t\t\tsphereGeo.addAttribute('worldObjectId', new THREE.BufferAttribute(new Float32Array([]), 1));\n\n\t\t\t\tsphereGeo.uuid = g;\n\t\t\t\tsphereGeo.name = gData.name;\n\n\t\t\t\twindow.Q3.assets.geometries[g] = sphereGeo;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Cube':\n\t\t\t\tconst cubeGeo = (geo = new THREE.BoxBufferGeometry(gData.width, gData.height, gData.depth));\n\n\t\t\t\tcubeGeo.addAttribute('worldObjectId', new THREE.BufferAttribute(new Float32Array([]), 1));\n\n\t\t\t\tcubeGeo.uuid = g;\n\t\t\t\tcubeGeo.name = gData.name;\n\n\t\t\t\twindow.Q3.assets.geometries[g] = cubeGeo;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Arrow':\n\t\t\t\tconst arrowGeo = (geo = new THREE.ArrowBufferGeometry(\n\t\t\t\t\tgData.width,\n\t\t\t\t\tgData.height,\n\t\t\t\t\tgData.depth,\n\t\t\t\t\tgData.arrowWidth,\n\t\t\t\t\tgData.arrowHeight\n\t\t\t\t));\n\n\t\t\t\tarrowGeo.addAttribute('worldObjectId', new THREE.BufferAttribute(new Float32Array([]), 1));\n\n\t\t\t\tarrowGeo.uuid = g;\n\t\t\t\tarrowGeo.name = gData.name;\n\n\t\t\t\twindow.Q3.assets.geometries[g] = arrowGeo;\n\t\t\t\tbreak;\n\n\t\t\tcase 'Plane':\n\t\t\t\tconst planeGeo = (geo = new THREE.PlaneBufferGeometry(\n\t\t\t\t\tgData.width,\n\t\t\t\t\tgData.height,\n\t\t\t\t\tgData.widthSegments,\n\t\t\t\t\tgData.heightSegments\n\t\t\t\t));\n\t\t\t\tplaneGeo.uuid = g;\n\t\t\t\tplaneGeo.name = gData.name;\n\n\t\t\t\tplaneGeo.addAttribute('worldObjectId', new THREE.BufferAttribute(new Float32Array([]), 1));\n\n\t\t\t\twindow.Q3.assets.geometries[g] = planeGeo;\n\t\t\t\tbreak;\n\n\t\t\tcase 'Ring':\n\t\t\t\tconst ringGeo = (geo = new THREE.CustomRingBufferGeometry(\n\t\t\t\t\tgData.innerRadius,\n\t\t\t\t\tgData.outerRadius,\n\t\t\t\t\tgData.thetaSegments\n\t\t\t\t));\n\n\t\t\t\tringGeo.addAttribute('worldObjectId', new THREE.BufferAttribute(new Float32Array([]), 1));\n\n\t\t\t\tringGeo.uuid = g;\n\t\t\t\tringGeo.name = gData.name;\n\n\t\t\t\twindow.Q3.assets.geometries[g] = ringGeo;\n\t\t\t\tbreak;\n\n\t\t\tcase 'IconHotspot':\n\t\t\t\tconst spriteGeo = (geo = generateSpriteGeometry());\n\n\t\t\t\tspriteGeo.uuid = g;\n\t\t\t\tspriteGeo.name = gData.name;\n\n\t\t\t\twindow.Q3.assets.geometries[g] = spriteGeo;\n\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tassetsRequestsCount++;\n\t\t\t\tpromises.push(\n\t\t\t\t\tnew Promise((resolve, reject) => {\n\t\t\t\t\t\tfunction loadDraco(path) {\n\t\t\t\t\t\t\twindow.Q3.loaders.draco.load(\n\t\t\t\t\t\t\t\tpath,\n\t\t\t\t\t\t\t\tgeometry => {\n\t\t\t\t\t\t\t\t\tgeo = geometry;\n\n\t\t\t\t\t\t\t\t\tupdateProgressBar();\n\n\t\t\t\t\t\t\t\t\tgeometry.addAttribute(\n\t\t\t\t\t\t\t\t\t\t'worldObjectId',\n\t\t\t\t\t\t\t\t\t\tnew THREE.BufferAttribute(new Float32Array([]), 1)\n\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\twindow.Q3.assets.geometries[g] = geometry;\n\t\t\t\t\t\t\t\t\twindow.Q3.assets.geometries[g].uuid = g;\n\t\t\t\t\t\t\t\t\twindow.Q3.assets.geometries[g].name = gData.name;\n\n\t\t\t\t\t\t\t\t\tresolve();\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t\treason => {\n\t\t\t\t\t\t\t\t\tupdateProgressBar();\n\n\t\t\t\t\t\t\t\t\twindow.Q3.assets.geometries[g] = undefined;\n\n\t\t\t\t\t\t\t\t\t// window.Q3.assets.geometries[g].uuid = g;\n\t\t\t\t\t\t\t\t\t// window.Q3.assets.geometries[g].name = gData.name;\n\n\t\t\t\t\t\t\t\t\tresolve();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfunction loadGeometryFromGLTF(path) {\n\t\t\t\t\t\t\tloadGLTF(\n\t\t\t\t\t\t\t\tpath,\n\t\t\t\t\t\t\t\tnodes => {\n\t\t\t\t\t\t\t\t\tlet geometry = null;\n\t\t\t\t\t\t\t\t\tlet node = nodes.scene.getObjectByName(g);\n\t\t\t\t\t\t\t\t\tif (!!node) {\n\t\t\t\t\t\t\t\t\t\tgeometry = node.geometry;\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tgeometry = nodes.scene.children[0].geometry;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tgeo = geometry;\n\n\t\t\t\t\t\t\t\t\tupdateProgressBar();\n\n\t\t\t\t\t\t\t\t\tgeometry.addAttribute(\n\t\t\t\t\t\t\t\t\t\t'worldObjectId',\n\t\t\t\t\t\t\t\t\t\tnew THREE.BufferAttribute(new Float32Array([]), 1)\n\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\twindow.Q3.assets.geometries[g] = geometry;\n\t\t\t\t\t\t\t\t\twindow.Q3.assets.geometries[g].uuid = g;\n\t\t\t\t\t\t\t\t\twindow.Q3.assets.geometries[g].name = gData.name;\n\n\t\t\t\t\t\t\t\t\tresolve();\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\treason => {\n\t\t\t\t\t\t\t\t\tupdateProgressBar();\n\n\t\t\t\t\t\t\t\t\twindow.Q3.assets.geometries[g] = undefined;\n\n\t\t\t\t\t\t\t\t\t// window.Q3.assets.geometries[g].uuid = g;\n\t\t\t\t\t\t\t\t\t// window.Q3.assets.geometries[g].name = gData.name;\n\n\t\t\t\t\t\t\t\t\tresolve();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgData.path.match(/.glb$|.gltf$/) ? loadGeometryFromGLTF(gData.path) : loadDraco(gData.path);\n\t\t\t\t\t})\n\t\t\t\t);\n\n\t\t\t\tbreak;\n\t\t}\n\t});\n\treturn Promise.all(promises);\n}\n\nfunction loadAnimations() {\n\tconst loadQueue = [];\n\n\tconst animations = Object.keys(window.Q3.data.assets.animations || {});\n\tanimations.forEach(animUuid => {\n\t\tloadQueue.push({\n\t\t\tpriority: 2,\n\t\t\tload: () => {\n\t\t\t\treturn new Promise(resolve => {\n\t\t\t\t\tconst animData = window.Q3.data.assets.animations[animUuid];\n\t\t\t\t\twindow.Q3.loaders.file.load(\n\t\t\t\t\t\tanimData.path,\n\t\t\t\t\t\tanimJson => {\n\t\t\t\t\t\t\twindow.Q3.assets.animations = window.Q3.assets.animations || {};\n\t\t\t\t\t\t\tconst clip = (window.Q3.assets.animations[animUuid] = THREE.AnimationClip.parse(\n\t\t\t\t\t\t\t\tJSON.parse(animJson)\n\t\t\t\t\t\t\t));\n\t\t\t\t\t\t\tconst objectsUuids = Object.keys(window.Q3.data.assets.objects);\n\t\t\t\t\t\t\tobjectsUuids.forEach(objectUuid => {\n\t\t\t\t\t\t\t\t//start loop animation is any attached\n\t\t\t\t\t\t\t\tlet animation = window.Q3.data.assets.objects[objectUuid].animation;\n\t\t\t\t\t\t\t\tif (typeof animation === 'string') {\n\t\t\t\t\t\t\t\t\twindow.Q3.data.assets.objects[objectUuid].animation = animation = {\n\t\t\t\t\t\t\t\t\t\tuuid: animation,\n\t\t\t\t\t\t\t\t\t\ttype: THREE.LoopRepeat,\n\t\t\t\t\t\t\t\t\t\ttimescale: 1\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (animation && animation.uuid === animUuid) {\n\t\t\t\t\t\t\t\t\tconst object = window.Q3.assets.objects[objectUuid];\n\t\t\t\t\t\t\t\t\tif (clip) {\n\t\t\t\t\t\t\t\t\t\tconst action = window.Q3.mixer.clipAction(clip, object);\n\t\t\t\t\t\t\t\t\t\taction.setLoop(animation.type || THREE.LoopRepeat);\n\t\t\t\t\t\t\t\t\t\taction.setEffectiveTimeScale(animation.timescale || 1);\n\t\t\t\t\t\t\t\t\t\taction.play();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tif (Object.keys(window.Q3.assets.animations).length === animations.length) {\n\t\t\t\t\t\t\t\twindow.Q3.fire('assetsLoaded');\n\t\t\t\t\t\t\t\tconsole.log('assets loaded fired');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tresolve();\n\t\t\t\t\t\t},\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\tresolve\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t});\n\treturn loadQueue;\n}\n\nfunction getTextureUrl(id, size) {\n\tconst tData = window.Q3.data.assets.textures[id];\n\tconst ext = tData.path.slice(tData.path.lastIndexOf('.') + 1);\n\tlet url =\n\t\t'/texture?id=' + id + '&ext=' + ext + '&size=' + size + '&webp=' + window.Q3.browserCapabilities.supports.WebP;\n\tif (window.COOBO) {\n\t\turl = '/api' + url;\n\t}\n\treturn url;\n}\n\nfunction loadTextures() {\n\tconst texturesArray = Object.keys(window.Q3.data.assets.textures);\n\twindow.Q3.loaders.texture = window.Q3.loaders.texture || new THREE.TextureLoader();\n\tconst texturesLoadQueue = [];\n\tconst materials = Object.keys(window.Q3.data.assets.materials).map(x => window.Q3.data.assets.materials[x]);\n\tconst pbrTextures = materials\n\t\t.map(x => x.metalnessMap)\n\t\t.concat(materials.map(x => x.normalMap))\n\t\t.concat(materials.map(x => x.roughnessMap))\n\t\t.filter((item, pos, self) => self.indexOf(item) == pos);\n\tconst backgroundTextures = window.Q3.data.slides.map(slide => slide.backgroundValue);\n\n\ttexturesArray.forEach(t => {\n\t\tconst tData = window.Q3.data.assets.textures[t];\n\t\tif (!tData.cube && window.Q3.assets.textures[t]) {\n\t\t\t//if texture placeholder was not created it means that we want to skip this texture (lq mode for instance)\n\t\t\tlet size = window.Q3.data.assets.textures[t].size || 0; //assume size 2^12 = 4k if not present\n\t\t\tif (window.Q3.browserCapabilities.renderQuality === RenderQuality.NORMAL) {\n\t\t\t\tif (backgroundTextures.indexOf(t) === -1) {\n\t\t\t\t\tsize--;\n\t\t\t\t}\n\t\t\t} else if (window.Q3.browserCapabilities.renderQuality === RenderQuality.LOW) {\n\t\t\t\tif (pbrTextures.indexOf(t) !== -1) {\n\t\t\t\t\tsize -= 2;\n\t\t\t\t} else {\n\t\t\t\t\tsize--;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (size <= 0 || size > 7) {\n\t\t\t\tconst lodSize = 7; // texture size 2^7 = 128 as first LOD\n\t\t\t\tconst lodPath = getTextureUrl(t, lodSize); // texture size 2^7 = 128 as first LOD\n\t\t\t\ttexturesLoadQueue.push({\n\t\t\t\t\tpriority: 0,\n\t\t\t\t\tload: loadTexture.bind(null, t, lodPath)\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst path = getTextureUrl(t, size);\n\t\t\ttexturesLoadQueue.push({\n\t\t\t\tpriority: 10,\n\t\t\t\tload: loadTexture.bind(null, t, path)\n\t\t\t});\n\t\t}\n\t});\n\treturn texturesLoadQueue;\n}\n\nconst textureRegex = /(?:[\\da-z_-]+)\\.(?:[a-z]+)$/i;\n\nfunction loadTexture(uuid, path) {\n\treturn new Promise(resolve => {\n\t\tif (!path) {\n\t\t\tresolve();\n\t\t\treturn;\n\t\t}\n\n\t\tconst match = path.match(textureRegex);\n\n\t\tpath = match ? `/assets/${match[0]}${window.Q3.browserCapabilities.supports.WebP ? '.webp' : ''}` : path;\n\n\t\twindow.Q3.loaders.texture.load(\n\t\t\tpath,\n\t\t\ttexture => {\n\t\t\t\tconst tData = window.Q3.data.assets.textures[uuid];\n\t\t\t\tfor (let k in tData) {\n\t\t\t\t\tif (texture.hasOwnProperty(k)) {\n\t\t\t\t\t\tif (k === 'repeat') {\n\t\t\t\t\t\t\tObject.assign(texture.repeat, { x: tData[k][0], y: tData[k][1] });\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttexture[k] = tData[k];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttexture.uuid = uuid;\n\t\t\t\tif (!!window.Q3.assets.textures[uuid]) {\n\t\t\t\t\twindow.Q3.assets.textures[uuid].dispose();\n\t\t\t\t}\n\t\t\t\twindow.Q3.assets.textures[uuid] = texture;\n\t\t\t\tif (!tData.dominantColor) {\n\t\t\t\t\tRGBaster.colors(texture.image, {\n\t\t\t\t\t\tsuccess: function(payload) {\n\t\t\t\t\t\t\ttData.dominantColor = payload.dominant;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tupdateObjects();\n\t\t\t\twindow.Q3.background.updateTextures();\n\t\t\t\tresolve();\n\t\t\t},\n\t\t\tundefined,\n\t\t\tresolve\n\t\t);\n\t});\n}\n\nfunction loadLiveLabels() {\n\tlet labelsLoaded = 0;\n\tconst loadQueue = [];\n\tconst liveLabels = Object.keys(window.Q3.data.liveLabels || {});\n\tif (!liveLabels.length) {\n\t\twindow.Q3.fire('labelsLoaded');\n\t\twindow.Q3.labelsLoaded = true;\n\t}\n\n\tfunction deserializeLabels(data) {\n\t\tif (!data) return;\n\t\tconst { data: label_data, object } = data;\n\t\tif (object.uuid !== label_data.object_uuid) return;\n\t\tconst label = label_data.label;\n\t\twindow.Q3.labels.live.deserialize(label_data.version, object, label);\n\t\t//document.dispatchEvent(new Event(\"loadedassets\"));\n\t\tlabelsLoaded++;\n\t\tif (labelsLoaded === liveLabels.length) {\n\t\t\twindow.Q3.labelsLoaded = true;\n\t\t\twindow.Q3.fire('labelsLoaded');\n\t\t}\n\t}\n\n\tcomputeFontSize();\n\n\tif (!window.Q3.editMode && getParams(window.location.href).preview === 'true') {\n\t\twindow.Q3.data.liveLabels.forEach(l => {\n\t\t\tconst root = window.Q3.scene;\n\t\t\tconst object = root.getObjectByProperty('uuid', l.object_uuid);\n\t\t\tdeserializeLabels({ object: object, data: l });\n\t\t});\n\t\twindow.Q3.fire('labelsLoaded');\n\t} else {\n\t\tliveLabels.forEach(object_uuid => {\n\t\t\tloadQueue.push({\n\t\t\t\tpriority: 3,\n\t\t\t\tload: () => {\n\t\t\t\t\treturn new Promise(resolve => {\n\t\t\t\t\t\tconst root = window.Q3.scene;\n\t\t\t\t\t\tconst object = root.getObjectByProperty('uuid', object_uuid);\n\t\t\t\t\t\tif (object) {\n\t\t\t\t\t\t\tconst label_uuid = window.Q3.data.liveLabels[object_uuid];\n\t\t\t\t\t\t\t// var url = \"/getLiveLabels/\" + label_uuid;\n\t\t\t\t\t\t\tvar url = `${window.location.origin}/assets/live-labels/${label_uuid}.json`;\n\n\t\t\t\t\t\t\t// This shouldn't be put here and is a placeholder to get the work done since I'm not familiar enough with the file flow.\n\t\t\t\t\t\t\tif (!window.COOBO) {\n\t\t\t\t\t\t\t\turl = '/assets/live-labels/' + label_uuid + '.json';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t$.getJSON(url)\n\t\t\t\t\t\t\t\t.then(data => {\n\t\t\t\t\t\t\t\t\tdeserializeLabels({ object: object, data: data });\n\t\t\t\t\t\t\t\t\tresolve(null);\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t.catch(() => resolve(null));\n\t\t\t\t\t\t} else resolve(null);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\treturn loadQueue;\n}\n\nfunction loadEnvironmentLight() {\n\tfunction createImg(base64) {\n\t\tvar image = new Image();\n\t\tlet promise = new Promise((resolve, reject) => {\n\t\t\timage.onload = resolve;\n\t\t});\n\t\timage.src = base64;\n\t\treturn { image: image, promise: promise };\n\t}\n\n\tconst sides = ['px', 'nx', 'py', 'ny', 'pz', 'nz'];\n\n\tvar url = window.Q3.data.slides[0].envLight || '/assets-qbix/F16EFB92-4B2C-46EB-8F86-8AC2322E4FAE.env'; //for old tours that do not hav it yet\n\n\treturn {\n\t\tpriority: 4,\n\t\tload: () => {\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\twindow.Q3.loadEnvLight(url).then(cubeData => {\n\t\t\t\t\tconst envMap = window.Q3.assets.envLight.cubeMap;\n\t\t\t\t\tconst loadPromises = [];\n\t\t\t\t\tfor (let i = 0; i < cubeData.length; i++) {\n\t\t\t\t\t\tconst mipmap = cubeData[i];\n\t\t\t\t\t\tenvMap.mipmaps[i] = [];\n\t\t\t\t\t\tfor (let side of sides) {\n\t\t\t\t\t\t\tlet image = createImg(mipmap[side]);\n\t\t\t\t\t\t\tenvMap.mipmaps[i].push(image.image);\n\t\t\t\t\t\t\tloadPromises.push(image.promise);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tPromise.all(loadPromises).then(() => {\n\t\t\t\t\t\tenvMap.needsUpdate = true;\n\t\t\t\t\t});\n\t\t\t\t\tenvMap.maxMipLevel = 5;\n\t\t\t\t\tresolve(null);\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t};\n}\n\nfunction updateObjects() {\n\tObject.keys(window.Q3.data.assets.materials).forEach(matUuid => {\n\t\tconst matData = window.Q3.data.assets.materials[matUuid];\n\n\t\tif (matUuid) {\n\t\t\tconst material = window.Q3.assets.materials[matUuid];\n\n\t\t\tObject.keys(matData).forEach(mapType => {\n\t\t\t\tif (\n\t\t\t\t\t(mapType.indexOf('map') > -1 || mapType.indexOf('Map') > -1) &&\n\t\t\t\t\tmatData[mapType] &&\n\t\t\t\t\tmapType.indexOf('Intensity') === -1\n\t\t\t\t) {\n\t\t\t\t\tconst texture = window.Q3.assets.textures[matData[mapType]];\n\t\t\t\t\tif (!texture) {\n\t\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t\t'Material ' + matData.name + ' uses texture which is not present in textures collection'\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (mapType.indexOf('2') > -1) {\n\t\t\t\t\t\t//custom map uniforms for LOD\n\t\t\t\t\t\tmaterial[mapType].value = window.Q3.assets.textures[matData[mapType]];\n\t\t\t\t\t\tmaterial[mapType].value.needsUpdate = true;\n\t\t\t\t\t} else if (mapType === 'envMap') {\n\t\t\t\t\t\tmaterial[mapType] = window.Q3.assets.envLight.cubeMap;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmaterial[mapType] = window.Q3.assets.textures[matData[mapType]];\n\t\t\t\t\t\tmaterial[mapType].needsUpdate = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (material.isMeshNestedMaterial) {\n\t\t\t\tmaterial.layers.forEach(layer => {\n\t\t\t\t\tif (layer.map) layer.map = window.Q3.assets.textures[layer.map.uuid];\n\t\t\t\t\tif (layer.normalMap) layer.normalMap = window.Q3.assets.textures[layer.normalMap.uuid];\n\t\t\t\t});\n\t\t\t\tmaterial.resendTexturesToGPU();\n\t\t\t}\n\n\t\t\tmaterial.needsUpdate = true;\n\t\t\twindow.Q3.camera.update = true;\n\t\t}\n\t});\n}\n\nfunction initLoadQueue(backgroundLoadProgress) {\n\tvar textures = loadTextures();\n\tvar liveLabels = loadLiveLabels();\n\tvar animations = loadAnimations();\n\tvar envLight = loadEnvironmentLight();\n\tvar all = [...textures, ...liveLabels, ...animations, envLight];\n\tvar loaded = 0;\n\tall.sort((a, b) => a.priority - b.priority)\n\t\t.map(p => p.load)\n\t\t.reduce(\n\t\t\t(p, f) =>\n\t\t\t\tp.then(() => {\n\t\t\t\t\tloaded++;\n\t\t\t\t\tif (!!backgroundLoadProgress) {\n\t\t\t\t\t\tbackgroundLoadProgress(loaded / all.length);\n\t\t\t\t\t}\n\t\t\t\t\treturn f();\n\t\t\t\t}),\n\t\t\tPromise.resolve()\n\t\t);\n}\n\n// multiple geometries can be hold in a single gltf and each of them will try to load it\n// this function will prevent from loading the same file multiple times\nconst gltfPromises = {};\n\nfunction loadGLTF(path, onLoad, onError) {\n\tvar promise = gltfPromises[path];\n\tif (!promise) {\n\t\tpromise = new Promise(function(resolve, reject) {\n\t\t\twindow.Q3.loaders.gltf.load(path, x => resolve(x), undefined, reject);\n\t\t});\n\t\tgltfPromises[path] = promise;\n\t}\n\tpromise.then(onLoad, onError);\n}\n\n// WEBPACK FOOTER //\n// ./src/Q3/assets/loadAssets.js\n"]},"metadata":{},"sourceType":"module"}