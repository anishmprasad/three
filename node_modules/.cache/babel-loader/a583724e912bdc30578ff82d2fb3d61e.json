{"ast":null,"code":"import { initData } from './data/initData';\nimport LayersManager from './layers/LayersManager';\nimport { loadAssets } from './assets/loadAssets';\nimport { initStopDoingDumbShitProperties, setScene } from './scene/setScene';\nimport { addSlideControls } from './scene/setScene';\nimport { addNumberLabels } from './labels/numbers/addNumberLabels';\nimport { updateCamera } from './camera/updateCamera';\nimport { addVideo } from './slides/video/addVideo';\nimport { addAnimation } from './slides/animation/addAnimation';\nimport { addSupplements } from './supplements/addSupplements';\nimport DepthPass from './rendering/depthPass';\nimport IdPass from './rendering/idPass';\nimport { enterQuizz, enableQuizz, disableQuizz, leaveQuizz, updateQuizz } from './labels/numbers/quizz';\nimport { MeshIsolation } from './animations/meshIsolation';\nimport { initAudio } from './audio/initAudio';\nimport SlideQuiz from './slideQuiz/slideQuiz';\nimport bindLiveLabels from './labels/live/live-labels';\nimport { updateSpline } from './assets/spline';\nimport MaterialBuilder from './rendering/material-builder';\nimport Utils from './utils';\nimport InteractableGeometry from './geometry-teaching/interactable-geometry';\nimport THREE from 'three';\nimport { getBrowserCapabilities } from './check-browser';\nimport cloneObject from '../editor/helpers/cloneObject';\nimport Molecule from './chemistry/molecule';\nimport Atom from './chemistry/atom';\nimport AssessmentManager from './assessment/assessment-manager';\nimport CoilEmField from './coilEmField/coilEmField';\nimport AssetDeserializer from './assets/asset-deserializer';\nimport { setPP } from './rendering/animate';\nconst useOldAssetLoader = false;\nwindow.AssessmentManager = AssessmentManager;\nwindow.COOBO = window.COOBO || Utils.queryParams.has('coobo'); // window.$3dMol = $3dMol;\n// import DriveAPI from \"./api/drive-api\";\n//\n// Q3.API = {\n//   Cloud: {\n//     Drive: DriveAPI\n//   }\n// };\n// let selected = null;\n// Object.defineProperty(Q3, \"selected\", {\n//   get: () => selected,\n//   set: val => {\n//     console.trace()\n//     return selected = val\n//   }\n// });\n\nif (Utils.queryParams.has('nospam')) {\n  THREE.Matrix3.NoSpam = THREE.Matrix4.NoSpam = true;\n}\n\nTHREE.SkinnedMesh.prototype.raycast = function () {\n  var inverseMatrix = new THREE.Matrix4();\n  var ray = new THREE.Ray();\n  var sphere = new THREE.Sphere();\n  var vA = new THREE.Vector3();\n  var vB = new THREE.Vector3();\n  var vC = new THREE.Vector3();\n  var skinned = new THREE.Vector4();\n  var skinVertex = new THREE.Vector4();\n  var skinIndex = new THREE.Vector4();\n  var skinWeight = new THREE.Vector4();\n  var temp4 = new THREE.Vector4();\n  var boneMatX = new THREE.Matrix4();\n  var boneMatY = new THREE.Matrix4();\n  var boneMatZ = new THREE.Matrix4();\n  var boneMatW = new THREE.Matrix4();\n  var tempA = new THREE.Vector3();\n  var tempB = new THREE.Vector3();\n  var tempC = new THREE.Vector3();\n  var uvA = new THREE.Vector2();\n  var uvB = new THREE.Vector2();\n  var uvC = new THREE.Vector2();\n  var barycoord = new THREE.Vector3();\n  var intersectionPoint = new THREE.Vector3();\n  var intersectionPointWorld = new THREE.Vector3();\n\n  function uvIntersection(point, p1, p2, p3, uv1, uv2, uv3) {\n    THREE.Triangle.barycoordFromPoint(point, p1, p2, p3, barycoord);\n    uv1.multiplyScalar(barycoord.x);\n    uv2.multiplyScalar(barycoord.y);\n    uv3.multiplyScalar(barycoord.z);\n    uv1.add(uv2).add(uv3);\n    return uv1.clone();\n  }\n\n  function checkIntersection(object, material, raycaster, ray, pA, pB, pC, point) {\n    var intersect;\n\n    if (material.side === THREE.BackSide) {\n      intersect = ray.intersectTriangle(pC, pB, pA, true, point);\n    } else {\n      intersect = ray.intersectTriangle(pA, pB, pC, material.side !== THREE.DoubleSide, point);\n    }\n\n    if (intersect === null) return null;\n    intersectionPointWorld.copy(point);\n    intersectionPointWorld.applyMatrix4(object.matrixWorld);\n    var distance = raycaster.ray.origin.distanceTo(intersectionPointWorld);\n    if (distance < raycaster.near || distance > raycaster.far) return null;\n    return {\n      distance: distance,\n      point: intersectionPointWorld.clone(),\n      object: object\n    };\n  }\n\n  function applyBone(vec, attrSkinIndex, attrSkinWeight, index, bindMatrix, bindMatrixInverse, boneMatrices) {\n    /*\n        #ifdef USE_SKINNING\n          vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n          vec4 skinned = vec4( 0.0 );\n          skinned += boneMatX * skinVertex * skinWeight.x;\n          skinned += boneMatY * skinVertex * skinWeight.y;\n          skinned += boneMatZ * skinVertex * skinWeight.z;\n          skinned += boneMatW * skinVertex * skinWeight.w;\n          transformed = ( bindMatrixInverse * skinned ).xyz;\n        #endif\n      */\n    skinIndex.fromBufferAttribute(attrSkinIndex, index);\n    skinWeight.fromBufferAttribute(attrSkinWeight, index);\n    boneMatX.fromArray(boneMatrices, skinIndex.x * 16);\n    boneMatY.fromArray(boneMatrices, skinIndex.y * 16);\n    boneMatZ.fromArray(boneMatrices, skinIndex.z * 16);\n    boneMatW.fromArray(boneMatrices, skinIndex.w * 16);\n    skinVertex.set(vec.x, vec.y, vec.z, 1).applyMatrix4(bindMatrix);\n    skinned.set(0, 0, 0, 0).add(temp4.copy(skinVertex).applyMatrix4(boneMatX).multiplyScalar(skinWeight.x)).add(temp4.copy(skinVertex).applyMatrix4(boneMatY).multiplyScalar(skinWeight.y)).add(temp4.copy(skinVertex).applyMatrix4(boneMatZ).multiplyScalar(skinWeight.z)).add(temp4.copy(skinVertex).applyMatrix4(boneMatW).multiplyScalar(skinWeight.w)).applyMatrix4(bindMatrixInverse);\n    vec.set(skinned.x, skinned.y, skinned.z);\n  }\n\n  function checkBufferGeometryIntersection(object, raycaster, ray, position, uv, skinIndex, skinWeight, a, b, c) {\n    const boneMatrices = object.skeleton.boneMatrices;\n    const bindMatrix = object.bindMatrix;\n    const bindMatrixInverse = object.bindMatrixInverse;\n    applyBone(vA.fromBufferAttribute(position, a), skinIndex, skinWeight, a, bindMatrix, bindMatrixInverse, boneMatrices);\n    applyBone(vB.fromBufferAttribute(position, b), skinIndex, skinWeight, b, bindMatrix, bindMatrixInverse, boneMatrices);\n    applyBone(vC.fromBufferAttribute(position, c), skinIndex, skinWeight, c, bindMatrix, bindMatrixInverse, boneMatrices);\n    var intersection = checkIntersection(object, object.material, raycaster, ray, vA, vB, vC, intersectionPoint);\n\n    if (intersection) {\n      if (uv) {\n        uvA.fromBufferAttribute(uv, a);\n        uvB.fromBufferAttribute(uv, b);\n        uvC.fromBufferAttribute(uv, c);\n        intersection.uv = uvIntersection(intersectionPoint, vA, vB, vC, uvA, uvB, uvC);\n      }\n\n      intersection.face = new THREE.Face3(a, b, c, THREE.Triangle.normal(vA, vB, vC));\n      intersection.faceIndex = a;\n    }\n\n    return intersection;\n  }\n\n  return function (raycaster, intersects, animatedMesh) {\n    if (!animatedMesh) {\n      THREE.Mesh.prototype.raycast.call(this, raycaster, intersects);\n      return intersects;\n    } else {\n      var geometry = this.geometry;\n      var material = this.material;\n      var matrixWorld = this.matrixWorld;\n      if (material === undefined) return; // Checking boundingSphere distance to ray\n\n      if (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n      sphere.copy(geometry.boundingSphere);\n      sphere.applyMatrix4(matrixWorld);\n      if (raycaster.ray.intersectsSphere(sphere) === false) return; //\n\n      inverseMatrix.getInverse(matrixWorld);\n      ray.copy(raycaster.ray).applyMatrix4(inverseMatrix); // Check boundingBox before continuing\n\n      if (geometry.boundingBox !== null) {\n        if (ray.intersectsBox(geometry.boundingBox) === false) return;\n      }\n\n      var intersection;\n\n      if (geometry.isBufferGeometry) {\n        var a, b, c;\n        var index = geometry.index; // var originalPosition = geometry.attributes.position;\n\n        var position = geometry.attributes.position; //.clone();\n\n        var attrSkinIndex = geometry.attributes.skinIndex;\n        var attrSkinWeight = geometry.attributes.skinWeight;\n\n        if (!attrSkinIndex || !attrSkinWeight) {\n          THREE.Mesh.prototype.raycast.call(this, raycaster, intersects);\n          return intersects;\n        }\n\n        var uv = geometry.attributes.uv;\n        var i, l;\n\n        if (index !== null) {\n          // indexed buffer geometry\n          for (i = 0, l = index.count; i < l; i += 3) {\n            a = index.getX(i);\n            b = index.getX(i + 1);\n            c = index.getX(i + 2);\n            intersection = checkBufferGeometryIntersection(this, raycaster, ray, position, uv, attrSkinIndex, attrSkinWeight, a, b, c);\n\n            if (intersection) {\n              intersection.faceIndex = Math.floor(i / 3); // triangle number in indices buffer semantics\n\n              intersects.push(intersection);\n            }\n          }\n        } else if (position !== undefined) {\n          // non-indexed buffer geometry\n          for (i = 0, l = position.count; i < l; i += 3) {\n            a = i;\n            b = i + 1;\n            c = i + 2;\n            intersection = checkBufferGeometryIntersection(this, raycaster, ray, position, uv, attrSkinIndex, attrSkinWeight, a, b, c);\n\n            if (intersection) {\n              intersection.index = a; // triangle number in positions buffer semantics\n\n              intersects.push(intersection);\n            }\n          }\n        }\n      } else {\n        console.warn('Not supported geometry type.');\n      }\n\n      return intersects;\n    }\n  };\n}(); // function filterLayersActions(data, ind) {\n//   for (let l in data.layers.layers2D) {\n//     for (let o in data.layers.layers2D[l].objects) {\n//       let obj = data.layers.layers2D[l].objects[o];\n//       obj.action.forEach( (a) => {\n//         if (a && a.value && a.value.slide) {\n//           const slide = Q3.data.slides[obj.action.value.slide];\n//           if (slide && slide.visible === false) {\n//             delete data.layers.layers2D[l].objects[o];\n//           } else {\n//             if (a.value.slide > ind) {\n//               a.value.slide--;\n//             }\n//           }\n//         }\n//       })\n//     }\n//   }\n// }\n\n\nexport var stats = new Stats();\nexport function start(elementId, data, editorMode) {\n  initStopDoingDumbShitProperties();\n  Q3.data = {}; //the empty JSON, before init with 'start'\n\n  Q3.slide = 0;\n  Q3.isTransitionning = false;\n  Q3.callbacks = {}; //fire/listen\n\n  Q3.Molecule = Molecule;\n  Q3.Atom = Atom;\n  Q3.CoilEmField = CoilEmField;\n  Q3.AssetDeserializer = AssetDeserializer;\n  Q3.editMode = !!editorMode;\n  Q3.browserCapabilities = getBrowserCapabilities(Q3.editMode);\n  Q3.isMobile = Q3.browserCapabilities.isMobile;\n  Q3.materialBuilder = MaterialBuilder;\n  Q3.setPP = setPP;\n\n  if (Q3.isMobile) {\n    document.body.classList.add('is-mobile');\n  }\n\n  if (data.setups.theme) {\n    document.body.classList.add(data.setups.theme);\n  }\n\n  if (Q3.editMode) {\n    Q3.draggableObjects = [];\n  }\n\n  Q3.listen = (eventName, callback) => {\n    Q3.callbacks[eventName] = Q3.callbacks[eventName] || [];\n    Q3.callbacks[eventName].push(callback);\n  };\n\n  Q3.unlisten = (eventName, callback) => {\n    const eventCallbacks = Q3.callbacks[eventName];\n\n    if (eventCallbacks) {\n      var index = eventCallbacks.indexOf(callback);\n\n      if (index > -1) {\n        eventCallbacks.splice(index, 1);\n      }\n    }\n  };\n\n  Q3.setEnvLight = cube => {\n    function createImg(base64) {\n      var image = new Image();\n      image.src = base64;\n      return image;\n    }\n\n    const envMap = Q3.assets.envLight.cubeMap;\n\n    for (let i = 0; i < cube.length; i++) {\n      const mipmap = cube[i];\n      envMap.mipmaps[i] = [createImg(mipmap.px), createImg(mipmap.nx), createImg(mipmap.py), createImg(mipmap.ny), createImg(mipmap.pz), createImg(mipmap.nz)];\n    }\n\n    envMap.needsUpdate = true;\n    Q3.camera.update = true;\n  };\n\n  bindLiveLabels(Q3);\n\n  Q3.fire = (eventName, event) => {\n    if (Q3.callbacks[eventName]) {\n      Q3.callbacks[eventName].forEach(f => {\n        f(event);\n      });\n    }\n  };\n\n  initData(data); //Initializes default values when properties are empties.\n\n  if (!data.highlightColor) {\n    data.highlightColor = new THREE.Color('#77ff77').getHex();\n  }\n\n  if (!data.quizData) {\n    data.quizData = {};\n  }\n\n  if (!data.setups.autoplayDelay) {\n    data.setups.autoplayDelay = 4;\n  }\n\n  for (let i = 0; i < data.slides.length; i++) {\n    // if (!Q3.editMode && data.slides[i].visible === false) {\n    //   filterLayersActions(data, i);\n    //   data.slides.splice(i, 1);\n    //   i--;\n    //   continue;\n    // }\n    if (!data.slides[i].cameraLimits) {\n      data.slides[i].cameraLimits = {\n        zoomLimitEnabled: false,\n        minDistance: 0,\n        maxDistance: 10,\n        horizontalAngleLimitEnabled: false,\n        minAzimuthAngle: -180,\n        maxAzimuthAngle: 180,\n        verticalAngleLimitEnabled: false,\n        minPolarAngle: 0,\n        maxPolarAngle: 90,\n        enablePan: true\n      };\n    }\n\n    if (!data.slides[i].controls) {\n      data.slides[i].controls = {};\n    }\n\n    if (!('visible' in data.slides[i])) {\n      data.slides[i].visible = true;\n    }\n\n    if (!('title' in data.slides[i])) {\n      data.slides[i].title = 'Slide';\n    } // if (!data.slides[i].slideQuiz) {\n    //   data.slides[i].slideQuiz = new SlideQuiz();\n    //   data.slides[i].slideQuizReset = JSON.stringify(data.slides[i].slideQuiz);\n    // } else if (!(data.slides[i].slideQuiz instanceof SlideQuiz)) {\n\n\n    let quizData = data.slides[i].slideQuiz;\n\n    if (JSON.stringify(quizData) === '{}') {\n      quizData = null;\n    }\n\n    data.slides[i].slideQuizReset = JSON.stringify(quizData);\n    data.slides[i].slideQuiz = new SlideQuiz(quizData); // }\n\n    if (!data.slides[i].envLight) {\n      data.slides[i].envLight = data.assets.envLight || '/assets-qbix/F16EFB92-4B2C-46EB-8F86-8AC2322E4FAE.env';\n    }\n\n    if (!data.slides[i].fog) {\n      data.slides[i].fog = data.setups.fog;\n    }\n  }\n\n  try {\n    if (!data.slides[0].layers2D) {\n      let newLayers2D = {}; // let layersCloned = {};\n\n      data.slides.forEach(slideData => {\n        let uuidMap = {};\n        slideData.layers2D = {};\n        Object.keys(data.layers.layers2D).forEach(uuid => {\n          if (typeof slideData.layers[uuid] !== 'undefined') {\n            if (slideData.layers[uuid] === true) {\n              let newUuid = THREE.Math.generateUUID();\n              uuidMap[uuid] = newUuid;\n              newLayers2D[newUuid] = cloneObject(data.layers.layers2D[uuid]);\n              slideData.layers2D[newUuid] = 1;\n              slideData.layers[newUuid] = true;\n              delete slideData.layers[uuid];\n              Object.keys(newLayers2D[newUuid].objects).forEach(objUuid => {\n                uuidMap[objUuid] = THREE.Math.generateUUID();\n                newLayers2D[newUuid].objects[uuidMap[objUuid]] = cloneObject(newLayers2D[newUuid].objects[objUuid]);\n                delete newLayers2D[newUuid].objects[objUuid];\n                let oldMeshLineParentUuid = newLayers2D[newUuid].objects[uuidMap[objUuid]].meshLineParentUuid;\n\n                if (oldMeshLineParentUuid && !data.layers.layers2D[oldMeshLineParentUuid]) {\n                  delete newLayers2D[newUuid].objects[uuidMap[objUuid]].meshLineParentUuid;\n                }\n\n                if (oldMeshLineParentUuid && data.layers.layers2D[oldMeshLineParentUuid]) {\n                  let newMeshLineParentUuid = uuidMap[oldMeshLineParentUuid];\n\n                  if (!newMeshLineParentUuid) {\n                    newMeshLineParentUuid = THREE.Math.generateUUID();\n                    uuidMap[oldMeshLineParentUuid] = newMeshLineParentUuid;\n                    slideData.layers[newMeshLineParentUuid] = Boolean(slideData.layers[oldMeshLineParentUuid]);\n                  }\n\n                  newLayers2D[newUuid].objects[uuidMap[objUuid]].meshLineParentUuid = newMeshLineParentUuid;\n                  slideData.layers[newMeshLineParentUuid] = Boolean(slideData.layers[oldMeshLineParentUuid]);\n                  delete slideData.layers[oldMeshLineParentUuid];\n                  slideData.layers2D[newMeshLineParentUuid] = 1;\n                  newLayers2D[newMeshLineParentUuid] = cloneObject(data.layers.layers2D[oldMeshLineParentUuid]);\n                  Object.keys(newLayers2D[newMeshLineParentUuid].objects).forEach(lineUuid => {\n                    uuidMap[lineUuid] = THREE.Math.generateUUID();\n                    newLayers2D[newMeshLineParentUuid].objects[uuidMap[lineUuid]] = newLayers2D[newMeshLineParentUuid].objects[lineUuid];\n                    delete newLayers2D[newMeshLineParentUuid].objects[lineUuid];\n                  });\n                }\n              });\n            }\n          }\n        });\n      });\n      data.layers.layers2D = newLayers2D;\n    }\n  } catch (err) {\n    console.log(err);\n  }\n\n  initAudio(); //The method pop() puts its CB inside a settimeout 0 so that\n  //we are sure that even on mobile, the splash has been set\n  //when we start doing intensive CPU stuff\n\n  Q3.splash.pop(elementId, () => {\n    /* svg overlay */\n    const NSString = 'http://www.w3.org/2000/svg'; //DevSkim: ignore DS137138\n\n    let progressBar = $(\"<div id='mobile-progressbar'></div>\");\n    if (!Q3.nouicontrols) $('body').append(progressBar); // console.log(progressBar)\n\n    const onAssetLoadCallback = p => {\n      progressBar.width(p * 100 + '%');\n\n      if (p >= 1) {\n        progressBar.fadeOut();\n        Q3.isFullyLoaded = true;\n        Q3.analytics.loadingTime = new Date() - window.loadingStart + 'ms';\n        Q3.renderManager.setHighlightObjects();\n      }\n    };\n\n    if (useOldAssetLoader) {\n      loadAssets(onAssetLoadCallback); //load the assets provided\n    } else {\n      AssetDeserializer.load({\n        data: Q3.data,\n        browserCapabilities: Q3.browserCapabilities,\n        backgroundContainer: Q3.container,\n        curSlide: Q3.slide,\n        isEditMode: Q3.editMode\n      }).then(onAssetLoadCallback);\n    }\n\n    Q3.meshIsolation = new MeshIsolation();\n    setScene(editorMode);\n    Q3.layers = new LayersManager(data);\n    Q3.fire('layersready');\n    Q3.container.appendChild(Q3.controls.autoCenterHelper);\n    if (perfDebug) document.body.appendChild(stats.domElement); // addSlideControls();\n    // Q3.depthPass = new DepthPass();\n    // Q3.idPass = new IdPass();\n\n    Q3.addNumberLabels = addNumberLabels; //addNumberLabels();//sets Q3.numberLabels\n\n    /*Q3.numberLabelsQuizz = {\n        counter: 0,\n        enabled: false,\n        enter: enterQuizz,\n        leave: leaveQuizz,\n        enable: enableQuizz,\n        disable: disableQuizz,\n        update: updateQuizz,\n      };\n       if (Q3.data.labels.number.enabled && Q3.data.labels.number.quizzing)\n         Q3.numberLabelsQuizz.enable();*/\n\n    updateCamera(); //adds camera\n    //addVideo();\n\n    addAnimation();\n    Q3.addAnimation = addAnimation;\n    Q3.updateSpline = updateSpline;\n    addSupplements();\n    let cameraLimits = Q3.data.slides[0].cameraLimits;\n\n    if (cameraLimits.zoomLimitEnabled) {\n      Q3.controls.minDistance = cameraLimits.minDistance;\n      Q3.controls.maxDistance = cameraLimits.maxDistance;\n    }\n\n    if (cameraLimits.horizontalAngleLimitEnabled) {\n      Q3.controls.minAzimuthAngle = cameraLimits.minAzimuthAngle * Math.PI / 180;\n      Q3.controls.maxAzimuthAngle = cameraLimits.maxAzimuthAngle * Math.PI / 180;\n    }\n\n    if (cameraLimits.verticalAngleLimitEnabled) {\n      Q3.controls.minPolarAngle = cameraLimits.minPolarAngle * Math.PI / 180;\n      Q3.controls.maxPolarAngle = cameraLimits.maxPolarAngle * Math.PI / 180;\n    }\n\n    Q3.controls.enablePan = cameraLimits.enablePan;\n\n    if (Q3.data.slides[0].controls) {\n      if (Q3.data.slides[0].controls.interactionType === 'FPS') {\n        Q3.controls.enabled = false;\n        Q3.controls = Q3.FPSControls;\n        Q3.controls.activate();\n      }\n    }\n\n    if (!Q3.editMode) {\n      Q3.analytics.initFPSlog();\n    }\n  });\n\n  Q3.loadEnvLight = function (url) {\n    Q3.loadEnvLight.cache = Q3.loadEnvLight.cache || {};\n\n    if (Q3.loadEnvLight.cache[url]) {\n      return Promise.resolve(Q3.loadEnvLight.cache[url]);\n    }\n\n    function base64ArrayBuffer(arrayBuffer) {\n      var base64 = '';\n      var encodings = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n      var bytes = new Uint8Array(arrayBuffer);\n      var byteLength = bytes.byteLength;\n      var byteRemainder = byteLength % 3;\n      var mainLength = byteLength - byteRemainder;\n      var a, b, c, d;\n      var chunk; // Main loop deals with bytes in chunks of 3\n\n      for (var i = 0; i < mainLength; i = i + 3) {\n        // Combine the three bytes into a single integer\n        chunk = bytes[i] << 16 | bytes[i + 1] << 8 | bytes[i + 2]; // Use bitmasks to extract 6-bit segments from the triplet\n\n        a = (chunk & 16515072) >> 18; // 16515072 = (2^6 - 1) << 18\n\n        b = (chunk & 258048) >> 12; // 258048   = (2^6 - 1) << 12\n\n        c = (chunk & 4032) >> 6; // 4032     = (2^6 - 1) << 6\n\n        d = chunk & 63; // 63       = 2^6 - 1\n        // Convert the raw binary segments to the appropriate ASCII encoding\n\n        base64 += encodings[a] + encodings[b] + encodings[c] + encodings[d];\n      } // Deal with the remaining bytes and padding\n\n\n      if (byteRemainder == 1) {\n        chunk = bytes[mainLength];\n        a = (chunk & 252) >> 2; // 252 = (2^6 - 1) << 2\n        // Set the 4 least significant bits to zero\n\n        b = (chunk & 3) << 4; // 3   = 2^2 - 1\n\n        base64 += encodings[a] + encodings[b] + '==';\n      } else if (byteRemainder == 2) {\n        chunk = bytes[mainLength] << 8 | bytes[mainLength + 1];\n        a = (chunk & 64512) >> 10; // 64512 = (2^6 - 1) << 10\n\n        b = (chunk & 1008) >> 4; // 1008  = (2^6 - 1) << 4\n        // Set the 2 least significant bits to zero\n\n        c = (chunk & 15) << 2; // 15    = 2^4 - 1\n\n        base64 += encodings[a] + encodings[b] + encodings[c] + '=';\n      }\n\n      return base64;\n    }\n\n    function readBuffer(buffer, ref) {\n      const size = (buffer[ref.pos++] << 16) + (buffer[ref.pos++] << 8) + buffer[ref.pos++];\n      var base64String = base64ArrayBuffer(buffer.slice(ref.pos, ref.pos + size));\n      ref.pos += size;\n      return 'data:image/png;base64,' + base64String;\n    }\n\n    function parseBinaryEnv(blob) {\n      const arrayBuffer = new Uint8Array(blob);\n      let pos = 0;\n      const version = arrayBuffer[pos++];\n\n      if (version === 0) {\n        const levels = arrayBuffer[pos++];\n        const ref = {\n          pos: pos\n        };\n        const cubeData = [];\n\n        for (let i = 0; i < levels; i++) {\n          cubeData.push({\n            px: readBuffer(arrayBuffer, ref),\n            nx: readBuffer(arrayBuffer, ref),\n            py: readBuffer(arrayBuffer, ref),\n            ny: readBuffer(arrayBuffer, ref),\n            pz: readBuffer(arrayBuffer, ref),\n            nz: readBuffer(arrayBuffer, ref)\n          });\n        }\n\n        return cubeData;\n      } else {\n        throw 'unsupported version of env light';\n      }\n    }\n\n    return new Promise((resolve, reject) => {\n      let xhr = new XMLHttpRequest();\n      xhr.open('GET', url, true);\n      xhr.responseType = 'blob';\n\n      xhr.onload = function () {\n        const blob = this.response;\n        const fileReader = new FileReader();\n\n        fileReader.onload = function (event) {\n          event.target.result;\n          const cubeData = parseBinaryEnv(event.target.result);\n          Q3.loadEnvLight.cache[url] = cubeData;\n          resolve(cubeData);\n        };\n\n        fileReader.readAsArrayBuffer(blob);\n      };\n\n      xhr.send();\n    });\n  };\n} // WEBPACK FOOTER //\n// ./src/Q3/start.js","map":{"version":3,"sources":["/Users/ghost/Documents/three/src/source/start.js"],"names":["initData","LayersManager","loadAssets","initStopDoingDumbShitProperties","setScene","addSlideControls","addNumberLabels","updateCamera","addVideo","addAnimation","addSupplements","DepthPass","IdPass","enterQuizz","enableQuizz","disableQuizz","leaveQuizz","updateQuizz","MeshIsolation","initAudio","SlideQuiz","bindLiveLabels","updateSpline","MaterialBuilder","Utils","InteractableGeometry","THREE","getBrowserCapabilities","cloneObject","Molecule","Atom","AssessmentManager","CoilEmField","AssetDeserializer","setPP","useOldAssetLoader","window","COOBO","queryParams","has","Matrix3","NoSpam","Matrix4","SkinnedMesh","prototype","raycast","inverseMatrix","ray","Ray","sphere","Sphere","vA","Vector3","vB","vC","skinned","Vector4","skinVertex","skinIndex","skinWeight","temp4","boneMatX","boneMatY","boneMatZ","boneMatW","tempA","tempB","tempC","uvA","Vector2","uvB","uvC","barycoord","intersectionPoint","intersectionPointWorld","uvIntersection","point","p1","p2","p3","uv1","uv2","uv3","Triangle","barycoordFromPoint","multiplyScalar","x","y","z","add","clone","checkIntersection","object","material","raycaster","pA","pB","pC","intersect","side","BackSide","intersectTriangle","DoubleSide","copy","applyMatrix4","matrixWorld","distance","origin","distanceTo","near","far","applyBone","vec","attrSkinIndex","attrSkinWeight","index","bindMatrix","bindMatrixInverse","boneMatrices","fromBufferAttribute","fromArray","w","set","checkBufferGeometryIntersection","position","uv","a","b","c","skeleton","intersection","face","Face3","normal","faceIndex","intersects","animatedMesh","Mesh","call","geometry","undefined","boundingSphere","computeBoundingSphere","intersectsSphere","getInverse","boundingBox","intersectsBox","isBufferGeometry","attributes","i","l","count","getX","Math","floor","push","console","warn","stats","Stats","start","elementId","data","editorMode","Q3","slide","isTransitionning","callbacks","editMode","browserCapabilities","isMobile","materialBuilder","document","body","classList","setups","theme","draggableObjects","listen","eventName","callback","unlisten","eventCallbacks","indexOf","splice","setEnvLight","cube","createImg","base64","image","Image","src","envMap","assets","envLight","cubeMap","length","mipmap","mipmaps","px","nx","py","ny","pz","nz","needsUpdate","camera","update","fire","event","forEach","f","highlightColor","Color","getHex","quizData","autoplayDelay","slides","cameraLimits","zoomLimitEnabled","minDistance","maxDistance","horizontalAngleLimitEnabled","minAzimuthAngle","maxAzimuthAngle","verticalAngleLimitEnabled","minPolarAngle","maxPolarAngle","enablePan","controls","visible","title","slideQuiz","JSON","stringify","slideQuizReset","fog","layers2D","newLayers2D","slideData","uuidMap","Object","keys","layers","uuid","newUuid","generateUUID","objects","objUuid","oldMeshLineParentUuid","meshLineParentUuid","newMeshLineParentUuid","Boolean","lineUuid","err","log","splash","pop","NSString","progressBar","$","nouicontrols","append","onAssetLoadCallback","p","width","fadeOut","isFullyLoaded","analytics","loadingTime","Date","loadingStart","renderManager","setHighlightObjects","load","backgroundContainer","container","curSlide","isEditMode","then","meshIsolation","appendChild","autoCenterHelper","perfDebug","domElement","PI","interactionType","enabled","FPSControls","activate","initFPSlog","loadEnvLight","url","cache","Promise","resolve","base64ArrayBuffer","arrayBuffer","encodings","bytes","Uint8Array","byteLength","byteRemainder","mainLength","d","chunk","readBuffer","buffer","ref","size","pos","base64String","slice","parseBinaryEnv","blob","version","levels","cubeData","reject","xhr","XMLHttpRequest","open","responseType","onload","response","fileReader","FileReader","target","result","readAsArrayBuffer","send"],"mappings":"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","sourcesContent":["import { initData } from './data/initData';\nimport LayersManager from './layers/LayersManager';\nimport { loadAssets } from './assets/loadAssets';\nimport { initStopDoingDumbShitProperties, setScene } from './scene/setScene';\nimport { addSlideControls } from './scene/setScene';\nimport { addNumberLabels } from './labels/numbers/addNumberLabels';\nimport { updateCamera } from './camera/updateCamera';\nimport { addVideo } from './slides/video/addVideo';\nimport { addAnimation } from './slides/animation/addAnimation';\nimport { addSupplements } from './supplements/addSupplements';\nimport DepthPass from './rendering/depthPass';\nimport IdPass from './rendering/idPass';\nimport { enterQuizz, enableQuizz, disableQuizz, leaveQuizz, updateQuizz } from './labels/numbers/quizz';\nimport { MeshIsolation } from './animations/meshIsolation';\nimport { initAudio } from './audio/initAudio';\nimport SlideQuiz from './slideQuiz/slideQuiz';\nimport bindLiveLabels from './labels/live/live-labels';\nimport { updateSpline } from './assets/spline';\nimport MaterialBuilder from './rendering/material-builder';\nimport Utils from './utils';\nimport InteractableGeometry from './geometry-teaching/interactable-geometry';\n\nimport THREE from 'three';\n\nimport { getBrowserCapabilities } from './check-browser';\nimport cloneObject from '../editor/helpers/cloneObject';\n\nimport Molecule from './chemistry/molecule';\nimport Atom from './chemistry/atom';\n\nimport AssessmentManager from './assessment/assessment-manager';\nimport CoilEmField from './coilEmField/coilEmField';\n\nimport AssetDeserializer from './assets/asset-deserializer';\nimport { setPP } from './rendering/animate';\n\nconst useOldAssetLoader = false;\n\nwindow.AssessmentManager = AssessmentManager;\nwindow.COOBO = window.COOBO || Utils.queryParams.has('coobo');\n\n// window.$3dMol = $3dMol;\n\n// import DriveAPI from \"./api/drive-api\";\n//\n// Q3.API = {\n//   Cloud: {\n//     Drive: DriveAPI\n//   }\n// };\n\n// let selected = null;\n// Object.defineProperty(Q3, \"selected\", {\n\n//   get: () => selected,\n//   set: val => {\n//     console.trace()\n//     return selected = val\n//   }\n\n// });\n\nif (Utils.queryParams.has('nospam')) {\n\tTHREE.Matrix3.NoSpam = THREE.Matrix4.NoSpam = true;\n}\n\nTHREE.SkinnedMesh.prototype.raycast = (function() {\n\tvar inverseMatrix = new THREE.Matrix4();\n\tvar ray = new THREE.Ray();\n\tvar sphere = new THREE.Sphere();\n\n\tvar vA = new THREE.Vector3();\n\tvar vB = new THREE.Vector3();\n\tvar vC = new THREE.Vector3();\n\n\tvar skinned = new THREE.Vector4();\n\tvar skinVertex = new THREE.Vector4();\n\tvar skinIndex = new THREE.Vector4();\n\tvar skinWeight = new THREE.Vector4();\n\tvar temp4 = new THREE.Vector4();\n\n\tvar boneMatX = new THREE.Matrix4();\n\tvar boneMatY = new THREE.Matrix4();\n\tvar boneMatZ = new THREE.Matrix4();\n\tvar boneMatW = new THREE.Matrix4();\n\n\tvar tempA = new THREE.Vector3();\n\tvar tempB = new THREE.Vector3();\n\tvar tempC = new THREE.Vector3();\n\n\tvar uvA = new THREE.Vector2();\n\tvar uvB = new THREE.Vector2();\n\tvar uvC = new THREE.Vector2();\n\n\tvar barycoord = new THREE.Vector3();\n\n\tvar intersectionPoint = new THREE.Vector3();\n\tvar intersectionPointWorld = new THREE.Vector3();\n\n\tfunction uvIntersection(point, p1, p2, p3, uv1, uv2, uv3) {\n\t\tTHREE.Triangle.barycoordFromPoint(point, p1, p2, p3, barycoord);\n\n\t\tuv1.multiplyScalar(barycoord.x);\n\t\tuv2.multiplyScalar(barycoord.y);\n\t\tuv3.multiplyScalar(barycoord.z);\n\n\t\tuv1.add(uv2).add(uv3);\n\n\t\treturn uv1.clone();\n\t}\n\n\tfunction checkIntersection(object, material, raycaster, ray, pA, pB, pC, point) {\n\t\tvar intersect;\n\n\t\tif (material.side === THREE.BackSide) {\n\t\t\tintersect = ray.intersectTriangle(pC, pB, pA, true, point);\n\t\t} else {\n\t\t\tintersect = ray.intersectTriangle(pA, pB, pC, material.side !== THREE.DoubleSide, point);\n\t\t}\n\n\t\tif (intersect === null) return null;\n\n\t\tintersectionPointWorld.copy(point);\n\t\tintersectionPointWorld.applyMatrix4(object.matrixWorld);\n\n\t\tvar distance = raycaster.ray.origin.distanceTo(intersectionPointWorld);\n\n\t\tif (distance < raycaster.near || distance > raycaster.far) return null;\n\n\t\treturn {\n\t\t\tdistance: distance,\n\t\t\tpoint: intersectionPointWorld.clone(),\n\t\t\tobject: object\n\t\t};\n\t}\n\n\tfunction applyBone(vec, attrSkinIndex, attrSkinWeight, index, bindMatrix, bindMatrixInverse, boneMatrices) {\n\t\t/*\n      #ifdef USE_SKINNING\n        vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n        vec4 skinned = vec4( 0.0 );\n        skinned += boneMatX * skinVertex * skinWeight.x;\n        skinned += boneMatY * skinVertex * skinWeight.y;\n        skinned += boneMatZ * skinVertex * skinWeight.z;\n        skinned += boneMatW * skinVertex * skinWeight.w;\n        transformed = ( bindMatrixInverse * skinned ).xyz;\n      #endif\n    */\n\n\t\tskinIndex.fromBufferAttribute(attrSkinIndex, index);\n\t\tskinWeight.fromBufferAttribute(attrSkinWeight, index);\n\n\t\tboneMatX.fromArray(boneMatrices, skinIndex.x * 16);\n\t\tboneMatY.fromArray(boneMatrices, skinIndex.y * 16);\n\t\tboneMatZ.fromArray(boneMatrices, skinIndex.z * 16);\n\t\tboneMatW.fromArray(boneMatrices, skinIndex.w * 16);\n\n\t\tskinVertex.set(vec.x, vec.y, vec.z, 1).applyMatrix4(bindMatrix);\n\n\t\tskinned\n\t\t\t.set(0, 0, 0, 0)\n\t\t\t.add(\n\t\t\t\ttemp4\n\t\t\t\t\t.copy(skinVertex)\n\t\t\t\t\t.applyMatrix4(boneMatX)\n\t\t\t\t\t.multiplyScalar(skinWeight.x)\n\t\t\t)\n\t\t\t.add(\n\t\t\t\ttemp4\n\t\t\t\t\t.copy(skinVertex)\n\t\t\t\t\t.applyMatrix4(boneMatY)\n\t\t\t\t\t.multiplyScalar(skinWeight.y)\n\t\t\t)\n\t\t\t.add(\n\t\t\t\ttemp4\n\t\t\t\t\t.copy(skinVertex)\n\t\t\t\t\t.applyMatrix4(boneMatZ)\n\t\t\t\t\t.multiplyScalar(skinWeight.z)\n\t\t\t)\n\t\t\t.add(\n\t\t\t\ttemp4\n\t\t\t\t\t.copy(skinVertex)\n\t\t\t\t\t.applyMatrix4(boneMatW)\n\t\t\t\t\t.multiplyScalar(skinWeight.w)\n\t\t\t)\n\t\t\t.applyMatrix4(bindMatrixInverse);\n\n\t\tvec.set(skinned.x, skinned.y, skinned.z);\n\t}\n\n\tfunction checkBufferGeometryIntersection(object, raycaster, ray, position, uv, skinIndex, skinWeight, a, b, c) {\n\t\tconst boneMatrices = object.skeleton.boneMatrices;\n\t\tconst bindMatrix = object.bindMatrix;\n\t\tconst bindMatrixInverse = object.bindMatrixInverse;\n\n\t\tapplyBone(\n\t\t\tvA.fromBufferAttribute(position, a),\n\t\t\tskinIndex,\n\t\t\tskinWeight,\n\t\t\ta,\n\t\t\tbindMatrix,\n\t\t\tbindMatrixInverse,\n\t\t\tboneMatrices\n\t\t);\n\t\tapplyBone(\n\t\t\tvB.fromBufferAttribute(position, b),\n\t\t\tskinIndex,\n\t\t\tskinWeight,\n\t\t\tb,\n\t\t\tbindMatrix,\n\t\t\tbindMatrixInverse,\n\t\t\tboneMatrices\n\t\t);\n\t\tapplyBone(\n\t\t\tvC.fromBufferAttribute(position, c),\n\t\t\tskinIndex,\n\t\t\tskinWeight,\n\t\t\tc,\n\t\t\tbindMatrix,\n\t\t\tbindMatrixInverse,\n\t\t\tboneMatrices\n\t\t);\n\n\t\tvar intersection = checkIntersection(object, object.material, raycaster, ray, vA, vB, vC, intersectionPoint);\n\n\t\tif (intersection) {\n\t\t\tif (uv) {\n\t\t\t\tuvA.fromBufferAttribute(uv, a);\n\t\t\t\tuvB.fromBufferAttribute(uv, b);\n\t\t\t\tuvC.fromBufferAttribute(uv, c);\n\n\t\t\t\tintersection.uv = uvIntersection(intersectionPoint, vA, vB, vC, uvA, uvB, uvC);\n\t\t\t}\n\n\t\t\tintersection.face = new THREE.Face3(a, b, c, THREE.Triangle.normal(vA, vB, vC));\n\t\t\tintersection.faceIndex = a;\n\t\t}\n\n\t\treturn intersection;\n\t}\n\n\treturn function(raycaster, intersects, animatedMesh) {\n\t\tif (!animatedMesh) {\n\t\t\tTHREE.Mesh.prototype.raycast.call(this, raycaster, intersects);\n\n\t\t\treturn intersects;\n\t\t} else {\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar material = this.material;\n\t\t\tvar matrixWorld = this.matrixWorld;\n\n\t\t\tif (material === undefined) return;\n\n\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\tif (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n\n\t\t\tsphere.copy(geometry.boundingSphere);\n\t\t\tsphere.applyMatrix4(matrixWorld);\n\n\t\t\tif (raycaster.ray.intersectsSphere(sphere) === false) return;\n\n\t\t\t//\n\n\t\t\tinverseMatrix.getInverse(matrixWorld);\n\t\t\tray.copy(raycaster.ray).applyMatrix4(inverseMatrix);\n\n\t\t\t// Check boundingBox before continuing\n\n\t\t\tif (geometry.boundingBox !== null) {\n\t\t\t\tif (ray.intersectsBox(geometry.boundingBox) === false) return;\n\t\t\t}\n\n\t\t\tvar intersection;\n\n\t\t\tif (geometry.isBufferGeometry) {\n\t\t\t\tvar a, b, c;\n\t\t\t\tvar index = geometry.index;\n\t\t\t\t// var originalPosition = geometry.attributes.position;\n\t\t\t\tvar position = geometry.attributes.position; //.clone();\n\t\t\t\tvar attrSkinIndex = geometry.attributes.skinIndex;\n\t\t\t\tvar attrSkinWeight = geometry.attributes.skinWeight;\n\n\t\t\t\tif (!attrSkinIndex || !attrSkinWeight) {\n\t\t\t\t\tTHREE.Mesh.prototype.raycast.call(this, raycaster, intersects);\n\n\t\t\t\t\treturn intersects;\n\t\t\t\t}\n\n\t\t\t\tvar uv = geometry.attributes.uv;\n\t\t\t\tvar i, l;\n\n\t\t\t\tif (index !== null) {\n\t\t\t\t\t// indexed buffer geometry\n\n\t\t\t\t\tfor (i = 0, l = index.count; i < l; i += 3) {\n\t\t\t\t\t\ta = index.getX(i);\n\t\t\t\t\t\tb = index.getX(i + 1);\n\t\t\t\t\t\tc = index.getX(i + 2);\n\n\t\t\t\t\t\tintersection = checkBufferGeometryIntersection(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\traycaster,\n\t\t\t\t\t\t\tray,\n\t\t\t\t\t\t\tposition,\n\t\t\t\t\t\t\tuv,\n\t\t\t\t\t\t\tattrSkinIndex,\n\t\t\t\t\t\t\tattrSkinWeight,\n\t\t\t\t\t\t\ta,\n\t\t\t\t\t\t\tb,\n\t\t\t\t\t\t\tc\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tif (intersection) {\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor(i / 3); // triangle number in indices buffer semantics\n\t\t\t\t\t\t\tintersects.push(intersection);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (position !== undefined) {\n\t\t\t\t\t// non-indexed buffer geometry\n\n\t\t\t\t\tfor (i = 0, l = position.count; i < l; i += 3) {\n\t\t\t\t\t\ta = i;\n\t\t\t\t\t\tb = i + 1;\n\t\t\t\t\t\tc = i + 2;\n\n\t\t\t\t\t\tintersection = checkBufferGeometryIntersection(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\traycaster,\n\t\t\t\t\t\t\tray,\n\t\t\t\t\t\t\tposition,\n\t\t\t\t\t\t\tuv,\n\t\t\t\t\t\t\tattrSkinIndex,\n\t\t\t\t\t\t\tattrSkinWeight,\n\t\t\t\t\t\t\ta,\n\t\t\t\t\t\t\tb,\n\t\t\t\t\t\t\tc\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tif (intersection) {\n\t\t\t\t\t\t\tintersection.index = a; // triangle number in positions buffer semantics\n\t\t\t\t\t\t\tintersects.push(intersection);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconsole.warn('Not supported geometry type.');\n\t\t\t}\n\n\t\t\treturn intersects;\n\t\t}\n\t};\n})();\n\n// function filterLayersActions(data, ind) {\n//   for (let l in data.layers.layers2D) {\n//     for (let o in data.layers.layers2D[l].objects) {\n//       let obj = data.layers.layers2D[l].objects[o];\n//       obj.action.forEach( (a) => {\n//         if (a && a.value && a.value.slide) {\n//           const slide = Q3.data.slides[obj.action.value.slide];\n//           if (slide && slide.visible === false) {\n//             delete data.layers.layers2D[l].objects[o];\n//           } else {\n//             if (a.value.slide > ind) {\n//               a.value.slide--;\n//             }\n//           }\n//         }\n//       })\n//     }\n//   }\n// }\n\nexport var stats = new Stats();\n\nexport function start(elementId, data, editorMode) {\n\tinitStopDoingDumbShitProperties();\n\tQ3.data = {}; //the empty JSON, before init with 'start'\n\tQ3.slide = 0;\n\tQ3.isTransitionning = false;\n\tQ3.callbacks = {}; //fire/listen\n\tQ3.Molecule = Molecule;\n\tQ3.Atom = Atom;\n\tQ3.CoilEmField = CoilEmField;\n\tQ3.AssetDeserializer = AssetDeserializer;\n\tQ3.editMode = !!editorMode;\n\tQ3.browserCapabilities = getBrowserCapabilities(Q3.editMode);\n\tQ3.isMobile = Q3.browserCapabilities.isMobile;\n\tQ3.materialBuilder = MaterialBuilder;\n\tQ3.setPP = setPP;\n\n\tif (Q3.isMobile) {\n\t\tdocument.body.classList.add('is-mobile');\n\t}\n\tif (data.setups.theme) {\n\t\tdocument.body.classList.add(data.setups.theme);\n\t}\n\tif (Q3.editMode) {\n\t\tQ3.draggableObjects = [];\n\t}\n\tQ3.listen = (eventName, callback) => {\n\t\tQ3.callbacks[eventName] = Q3.callbacks[eventName] || [];\n\n\t\tQ3.callbacks[eventName].push(callback);\n\t};\n\n\tQ3.unlisten = (eventName, callback) => {\n\t\tconst eventCallbacks = Q3.callbacks[eventName];\n\t\tif (eventCallbacks) {\n\t\t\tvar index = eventCallbacks.indexOf(callback);\n\t\t\tif (index > -1) {\n\t\t\t\teventCallbacks.splice(index, 1);\n\t\t\t}\n\t\t}\n\t};\n\n\tQ3.setEnvLight = cube => {\n\t\tfunction createImg(base64) {\n\t\t\tvar image = new Image();\n\t\t\timage.src = base64;\n\t\t\treturn image;\n\t\t}\n\n\t\tconst envMap = Q3.assets.envLight.cubeMap;\n\t\tfor (let i = 0; i < cube.length; i++) {\n\t\t\tconst mipmap = cube[i];\n\t\t\tenvMap.mipmaps[i] = [\n\t\t\t\tcreateImg(mipmap.px),\n\t\t\t\tcreateImg(mipmap.nx),\n\t\t\t\tcreateImg(mipmap.py),\n\t\t\t\tcreateImg(mipmap.ny),\n\t\t\t\tcreateImg(mipmap.pz),\n\t\t\t\tcreateImg(mipmap.nz)\n\t\t\t];\n\t\t}\n\t\tenvMap.needsUpdate = true;\n\t\tQ3.camera.update = true;\n\t};\n\n\tbindLiveLabels(Q3);\n\n\tQ3.fire = (eventName, event) => {\n\t\tif (Q3.callbacks[eventName]) {\n\t\t\tQ3.callbacks[eventName].forEach(f => {\n\t\t\t\tf(event);\n\t\t\t});\n\t\t}\n\t};\n\n\tinitData(data); //Initializes default values when properties are empties.\n\n\tif (!data.highlightColor) {\n\t\tdata.highlightColor = new THREE.Color('#77ff77').getHex();\n\t}\n\tif (!data.quizData) {\n\t\tdata.quizData = {};\n\t}\n\tif (!data.setups.autoplayDelay) {\n\t\tdata.setups.autoplayDelay = 4;\n\t}\n\tfor (let i = 0; i < data.slides.length; i++) {\n\t\t// if (!Q3.editMode && data.slides[i].visible === false) {\n\t\t//   filterLayersActions(data, i);\n\t\t//   data.slides.splice(i, 1);\n\t\t//   i--;\n\t\t//   continue;\n\t\t// }\n\t\tif (!data.slides[i].cameraLimits) {\n\t\t\tdata.slides[i].cameraLimits = {\n\t\t\t\tzoomLimitEnabled: false,\n\t\t\t\tminDistance: 0,\n\t\t\t\tmaxDistance: 10,\n\t\t\t\thorizontalAngleLimitEnabled: false,\n\t\t\t\tminAzimuthAngle: -180,\n\t\t\t\tmaxAzimuthAngle: 180,\n\t\t\t\tverticalAngleLimitEnabled: false,\n\t\t\t\tminPolarAngle: 0,\n\t\t\t\tmaxPolarAngle: 90,\n\t\t\t\tenablePan: true\n\t\t\t};\n\t\t}\n\t\tif (!data.slides[i].controls) {\n\t\t\tdata.slides[i].controls = {};\n\t\t}\n\t\tif (!('visible' in data.slides[i])) {\n\t\t\tdata.slides[i].visible = true;\n\t\t}\n\n\t\tif (!('title' in data.slides[i])) {\n\t\t\tdata.slides[i].title = 'Slide';\n\t\t}\n\n\t\t// if (!data.slides[i].slideQuiz) {\n\t\t//   data.slides[i].slideQuiz = new SlideQuiz();\n\t\t//   data.slides[i].slideQuizReset = JSON.stringify(data.slides[i].slideQuiz);\n\t\t// } else if (!(data.slides[i].slideQuiz instanceof SlideQuiz)) {\n\t\tlet quizData = data.slides[i].slideQuiz;\n\t\tif (JSON.stringify(quizData) === '{}') {\n\t\t\tquizData = null;\n\t\t}\n\t\tdata.slides[i].slideQuizReset = JSON.stringify(quizData);\n\t\tdata.slides[i].slideQuiz = new SlideQuiz(quizData);\n\t\t// }\n\n\t\tif (!data.slides[i].envLight) {\n\t\t\tdata.slides[i].envLight = data.assets.envLight || '/assets-qbix/F16EFB92-4B2C-46EB-8F86-8AC2322E4FAE.env';\n\t\t}\n\n\t\tif (!data.slides[i].fog) {\n\t\t\tdata.slides[i].fog = data.setups.fog;\n\t\t}\n\t}\n\ttry {\n\t\tif (!data.slides[0].layers2D) {\n\t\t\tlet newLayers2D = {};\n\t\t\t// let layersCloned = {};\n\n\t\t\tdata.slides.forEach(slideData => {\n\t\t\t\tlet uuidMap = {};\n\t\t\t\tslideData.layers2D = {};\n\t\t\t\tObject.keys(data.layers.layers2D).forEach(uuid => {\n\t\t\t\t\tif (typeof slideData.layers[uuid] !== 'undefined') {\n\t\t\t\t\t\tif (slideData.layers[uuid] === true) {\n\t\t\t\t\t\t\tlet newUuid = THREE.Math.generateUUID();\n\t\t\t\t\t\t\tuuidMap[uuid] = newUuid;\n\t\t\t\t\t\t\tnewLayers2D[newUuid] = cloneObject(data.layers.layers2D[uuid]);\n\t\t\t\t\t\t\tslideData.layers2D[newUuid] = 1;\n\t\t\t\t\t\t\tslideData.layers[newUuid] = true;\n\t\t\t\t\t\t\tdelete slideData.layers[uuid];\n\t\t\t\t\t\t\tObject.keys(newLayers2D[newUuid].objects).forEach(objUuid => {\n\t\t\t\t\t\t\t\tuuidMap[objUuid] = THREE.Math.generateUUID();\n\t\t\t\t\t\t\t\tnewLayers2D[newUuid].objects[uuidMap[objUuid]] = cloneObject(\n\t\t\t\t\t\t\t\t\tnewLayers2D[newUuid].objects[objUuid]\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tdelete newLayers2D[newUuid].objects[objUuid];\n\t\t\t\t\t\t\t\tlet oldMeshLineParentUuid =\n\t\t\t\t\t\t\t\t\tnewLayers2D[newUuid].objects[uuidMap[objUuid]].meshLineParentUuid;\n\t\t\t\t\t\t\t\tif (oldMeshLineParentUuid && !data.layers.layers2D[oldMeshLineParentUuid]) {\n\t\t\t\t\t\t\t\t\tdelete newLayers2D[newUuid].objects[uuidMap[objUuid]].meshLineParentUuid;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (oldMeshLineParentUuid && data.layers.layers2D[oldMeshLineParentUuid]) {\n\t\t\t\t\t\t\t\t\tlet newMeshLineParentUuid = uuidMap[oldMeshLineParentUuid];\n\t\t\t\t\t\t\t\t\tif (!newMeshLineParentUuid) {\n\t\t\t\t\t\t\t\t\t\tnewMeshLineParentUuid = THREE.Math.generateUUID();\n\t\t\t\t\t\t\t\t\t\tuuidMap[oldMeshLineParentUuid] = newMeshLineParentUuid;\n\t\t\t\t\t\t\t\t\t\tslideData.layers[newMeshLineParentUuid] = Boolean(\n\t\t\t\t\t\t\t\t\t\t\tslideData.layers[oldMeshLineParentUuid]\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tnewLayers2D[newUuid].objects[\n\t\t\t\t\t\t\t\t\t\tuuidMap[objUuid]\n\t\t\t\t\t\t\t\t\t].meshLineParentUuid = newMeshLineParentUuid;\n\t\t\t\t\t\t\t\t\tslideData.layers[newMeshLineParentUuid] = Boolean(\n\t\t\t\t\t\t\t\t\t\tslideData.layers[oldMeshLineParentUuid]\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tdelete slideData.layers[oldMeshLineParentUuid];\n\t\t\t\t\t\t\t\t\tslideData.layers2D[newMeshLineParentUuid] = 1;\n\t\t\t\t\t\t\t\t\tnewLayers2D[newMeshLineParentUuid] = cloneObject(\n\t\t\t\t\t\t\t\t\t\tdata.layers.layers2D[oldMeshLineParentUuid]\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tObject.keys(newLayers2D[newMeshLineParentUuid].objects).forEach(lineUuid => {\n\t\t\t\t\t\t\t\t\t\tuuidMap[lineUuid] = THREE.Math.generateUUID();\n\t\t\t\t\t\t\t\t\t\tnewLayers2D[newMeshLineParentUuid].objects[uuidMap[lineUuid]] =\n\t\t\t\t\t\t\t\t\t\t\tnewLayers2D[newMeshLineParentUuid].objects[lineUuid];\n\t\t\t\t\t\t\t\t\t\tdelete newLayers2D[newMeshLineParentUuid].objects[lineUuid];\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t\tdata.layers.layers2D = newLayers2D;\n\t\t}\n\t} catch (err) {\n\t\tconsole.log(err);\n\t}\n\n\tinitAudio();\n\n\t//The method pop() puts its CB inside a settimeout 0 so that\n\t//we are sure that even on mobile, the splash has been set\n\t//when we start doing intensive CPU stuff\n\tQ3.splash.pop(elementId, () => {\n\t\t/* svg overlay */\n\t\tconst NSString = 'http://www.w3.org/2000/svg'; //DevSkim: ignore DS137138\n\t\tlet progressBar = $(\"<div id='mobile-progressbar'></div>\");\n\t\tif (!Q3.nouicontrols) $('body').append(progressBar);\n\t\t// console.log(progressBar)\n\n\t\tconst onAssetLoadCallback = p => {\n\t\t\tprogressBar.width(p * 100 + '%');\n\t\t\tif (p >= 1) {\n\t\t\t\tprogressBar.fadeOut();\n\t\t\t\tQ3.isFullyLoaded = true;\n\t\t\t\tQ3.analytics.loadingTime = new Date() - window.loadingStart + 'ms';\n\t\t\t\tQ3.renderManager.setHighlightObjects();\n\t\t\t}\n\t\t};\n\n\t\tif (useOldAssetLoader) {\n\t\t\tloadAssets(onAssetLoadCallback); //load the assets provided\n\t\t} else {\n\t\t\tAssetDeserializer.load({\n\t\t\t\tdata: Q3.data,\n\t\t\t\tbrowserCapabilities: Q3.browserCapabilities,\n\t\t\t\tbackgroundContainer: Q3.container,\n\t\t\t\tcurSlide: Q3.slide,\n\t\t\t\tisEditMode: Q3.editMode\n\t\t\t}).then(onAssetLoadCallback);\n\t\t}\n\n\t\tQ3.meshIsolation = new MeshIsolation();\n\n\t\tsetScene(editorMode);\n\n\t\tQ3.layers = new LayersManager(data);\n\t\tQ3.fire('layersready');\n\n\t\tQ3.container.appendChild(Q3.controls.autoCenterHelper);\n\n\t\tif (perfDebug) document.body.appendChild(stats.domElement);\n\n\t\t// addSlideControls();\n\n\t\t// Q3.depthPass = new DepthPass();\n\t\t// Q3.idPass = new IdPass();\n\n\t\tQ3.addNumberLabels = addNumberLabels;\n\n\t\t//addNumberLabels();//sets Q3.numberLabels\n\n\t\t/*Q3.numberLabelsQuizz = {\n      counter: 0,\n      enabled: false,\n      enter: enterQuizz,\n      leave: leaveQuizz,\n      enable: enableQuizz,\n      disable: disableQuizz,\n      update: updateQuizz,\n    };\n\n    if (Q3.data.labels.number.enabled && Q3.data.labels.number.quizzing)\n\n      Q3.numberLabelsQuizz.enable();*/\n\n\t\tupdateCamera(); //adds camera\n\n\t\t//addVideo();\n\n\t\taddAnimation();\n\t\tQ3.addAnimation = addAnimation;\n\t\tQ3.updateSpline = updateSpline;\n\n\t\taddSupplements();\n\n\t\tlet cameraLimits = Q3.data.slides[0].cameraLimits;\n\n\t\tif (cameraLimits.zoomLimitEnabled) {\n\t\t\tQ3.controls.minDistance = cameraLimits.minDistance;\n\t\t\tQ3.controls.maxDistance = cameraLimits.maxDistance;\n\t\t}\n\n\t\tif (cameraLimits.horizontalAngleLimitEnabled) {\n\t\t\tQ3.controls.minAzimuthAngle = (cameraLimits.minAzimuthAngle * Math.PI) / 180;\n\t\t\tQ3.controls.maxAzimuthAngle = (cameraLimits.maxAzimuthAngle * Math.PI) / 180;\n\t\t}\n\n\t\tif (cameraLimits.verticalAngleLimitEnabled) {\n\t\t\tQ3.controls.minPolarAngle = (cameraLimits.minPolarAngle * Math.PI) / 180;\n\t\t\tQ3.controls.maxPolarAngle = (cameraLimits.maxPolarAngle * Math.PI) / 180;\n\t\t}\n\t\tQ3.controls.enablePan = cameraLimits.enablePan;\n\n\t\tif (Q3.data.slides[0].controls) {\n\t\t\tif (Q3.data.slides[0].controls.interactionType === 'FPS') {\n\t\t\t\tQ3.controls.enabled = false;\n\t\t\t\tQ3.controls = Q3.FPSControls;\n\t\t\t\tQ3.controls.activate();\n\t\t\t}\n\t\t}\n\n\t\tif (!Q3.editMode) {\n\t\t\tQ3.analytics.initFPSlog();\n\t\t}\n\t});\n\n\tQ3.loadEnvLight = function(url) {\n\t\tQ3.loadEnvLight.cache = Q3.loadEnvLight.cache || {};\n\t\tif (Q3.loadEnvLight.cache[url]) {\n\t\t\treturn Promise.resolve(Q3.loadEnvLight.cache[url]);\n\t\t}\n\t\tfunction base64ArrayBuffer(arrayBuffer) {\n\t\t\tvar base64 = '';\n\t\t\tvar encodings = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\n\t\t\tvar bytes = new Uint8Array(arrayBuffer);\n\t\t\tvar byteLength = bytes.byteLength;\n\t\t\tvar byteRemainder = byteLength % 3;\n\t\t\tvar mainLength = byteLength - byteRemainder;\n\n\t\t\tvar a, b, c, d;\n\t\t\tvar chunk;\n\n\t\t\t// Main loop deals with bytes in chunks of 3\n\t\t\tfor (var i = 0; i < mainLength; i = i + 3) {\n\t\t\t\t// Combine the three bytes into a single integer\n\t\t\t\tchunk = (bytes[i] << 16) | (bytes[i + 1] << 8) | bytes[i + 2];\n\n\t\t\t\t// Use bitmasks to extract 6-bit segments from the triplet\n\t\t\t\ta = (chunk & 16515072) >> 18; // 16515072 = (2^6 - 1) << 18\n\t\t\t\tb = (chunk & 258048) >> 12; // 258048   = (2^6 - 1) << 12\n\t\t\t\tc = (chunk & 4032) >> 6; // 4032     = (2^6 - 1) << 6\n\t\t\t\td = chunk & 63; // 63       = 2^6 - 1\n\n\t\t\t\t// Convert the raw binary segments to the appropriate ASCII encoding\n\t\t\t\tbase64 += encodings[a] + encodings[b] + encodings[c] + encodings[d];\n\t\t\t}\n\n\t\t\t// Deal with the remaining bytes and padding\n\t\t\tif (byteRemainder == 1) {\n\t\t\t\tchunk = bytes[mainLength];\n\n\t\t\t\ta = (chunk & 252) >> 2; // 252 = (2^6 - 1) << 2\n\n\t\t\t\t// Set the 4 least significant bits to zero\n\t\t\t\tb = (chunk & 3) << 4; // 3   = 2^2 - 1\n\n\t\t\t\tbase64 += encodings[a] + encodings[b] + '==';\n\t\t\t} else if (byteRemainder == 2) {\n\t\t\t\tchunk = (bytes[mainLength] << 8) | bytes[mainLength + 1];\n\n\t\t\t\ta = (chunk & 64512) >> 10; // 64512 = (2^6 - 1) << 10\n\t\t\t\tb = (chunk & 1008) >> 4; // 1008  = (2^6 - 1) << 4\n\n\t\t\t\t// Set the 2 least significant bits to zero\n\t\t\t\tc = (chunk & 15) << 2; // 15    = 2^4 - 1\n\n\t\t\t\tbase64 += encodings[a] + encodings[b] + encodings[c] + '=';\n\t\t\t}\n\n\t\t\treturn base64;\n\t\t}\n\n\t\tfunction readBuffer(buffer, ref) {\n\t\t\tconst size = (buffer[ref.pos++] << 16) + (buffer[ref.pos++] << 8) + buffer[ref.pos++];\n\n\t\t\tvar base64String = base64ArrayBuffer(buffer.slice(ref.pos, ref.pos + size));\n\t\t\tref.pos += size;\n\t\t\treturn 'data:image/png;base64,' + base64String;\n\t\t}\n\n\t\tfunction parseBinaryEnv(blob) {\n\t\t\tconst arrayBuffer = new Uint8Array(blob);\n\t\t\tlet pos = 0;\n\t\t\tconst version = arrayBuffer[pos++];\n\t\t\tif (version === 0) {\n\t\t\t\tconst levels = arrayBuffer[pos++];\n\t\t\t\tconst ref = { pos: pos };\n\t\t\t\tconst cubeData = [];\n\t\t\t\tfor (let i = 0; i < levels; i++) {\n\t\t\t\t\tcubeData.push({\n\t\t\t\t\t\tpx: readBuffer(arrayBuffer, ref),\n\t\t\t\t\t\tnx: readBuffer(arrayBuffer, ref),\n\t\t\t\t\t\tpy: readBuffer(arrayBuffer, ref),\n\t\t\t\t\t\tny: readBuffer(arrayBuffer, ref),\n\t\t\t\t\t\tpz: readBuffer(arrayBuffer, ref),\n\t\t\t\t\t\tnz: readBuffer(arrayBuffer, ref)\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn cubeData;\n\t\t\t} else {\n\t\t\t\tthrow 'unsupported version of env light';\n\t\t\t}\n\t\t}\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tlet xhr = new XMLHttpRequest();\n\t\t\txhr.open('GET', url, true);\n\t\t\txhr.responseType = 'blob';\n\t\t\txhr.onload = function() {\n\t\t\t\tconst blob = this.response;\n\t\t\t\tconst fileReader = new FileReader();\n\t\t\t\tfileReader.onload = function(event) {\n\t\t\t\t\tevent.target.result;\n\t\t\t\t\tconst cubeData = parseBinaryEnv(event.target.result);\n\t\t\t\t\tQ3.loadEnvLight.cache[url] = cubeData;\n\t\t\t\t\tresolve(cubeData);\n\t\t\t\t};\n\t\t\t\tfileReader.readAsArrayBuffer(blob);\n\t\t\t};\n\t\t\txhr.send();\n\t\t});\n\t};\n}\n\n// WEBPACK FOOTER //\n// ./src/Q3/start.js\n"]},"metadata":{},"sourceType":"module"}